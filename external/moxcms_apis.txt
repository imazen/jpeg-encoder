pub mod moxcms
pub enum moxcms::BarycentricWeightScale
pub moxcms::BarycentricWeightScale::Low
impl core::clone::Clone for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::clone(&self) -> moxcms::BarycentricWeightScale
impl core::cmp::Eq for moxcms::BarycentricWeightScale
impl core::cmp::Ord for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::cmp(&self, other: &moxcms::BarycentricWeightScale) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::eq(&self, other: &moxcms::BarycentricWeightScale) -> bool
impl core::cmp::PartialOrd for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::partial_cmp(&self, other: &moxcms::BarycentricWeightScale) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::default() -> moxcms::BarycentricWeightScale
impl core::fmt::Debug for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for moxcms::BarycentricWeightScale
impl core::marker::StructuralPartialEq for moxcms::BarycentricWeightScale
impl core::marker::Freeze for moxcms::BarycentricWeightScale
impl core::marker::Send for moxcms::BarycentricWeightScale
impl core::marker::Sync for moxcms::BarycentricWeightScale
impl core::marker::Unpin for moxcms::BarycentricWeightScale
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::BarycentricWeightScale
impl core::panic::unwind_safe::UnwindSafe for moxcms::BarycentricWeightScale
impl<T, U> core::convert::Into<U> for moxcms::BarycentricWeightScale where U: core::convert::From<T>
pub fn moxcms::BarycentricWeightScale::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::BarycentricWeightScale where U: core::convert::Into<T>
pub type moxcms::BarycentricWeightScale::Error = core::convert::Infallible
pub fn moxcms::BarycentricWeightScale::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::BarycentricWeightScale where U: core::convert::TryFrom<T>
pub type moxcms::BarycentricWeightScale::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::BarycentricWeightScale::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::BarycentricWeightScale where T: core::clone::Clone
pub type moxcms::BarycentricWeightScale::Owned = T
pub fn moxcms::BarycentricWeightScale::clone_into(&self, target: &mut T)
pub fn moxcms::BarycentricWeightScale::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::BarycentricWeightScale where T: 'static + ?core::marker::Sized
pub fn moxcms::BarycentricWeightScale::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::BarycentricWeightScale where T: ?core::marker::Sized
pub fn moxcms::BarycentricWeightScale::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::BarycentricWeightScale where T: ?core::marker::Sized
pub fn moxcms::BarycentricWeightScale::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::BarycentricWeightScale where T: core::clone::Clone
pub unsafe fn moxcms::BarycentricWeightScale::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::BarycentricWeightScale
pub fn moxcms::BarycentricWeightScale::from(t: T) -> T
pub enum moxcms::CicpColorPrimaries
pub moxcms::CicpColorPrimaries::Bt2020 = 9
pub moxcms::CicpColorPrimaries::Bt470Bg = 5
pub moxcms::CicpColorPrimaries::Bt470M = 4
pub moxcms::CicpColorPrimaries::Bt601 = 6
pub moxcms::CicpColorPrimaries::Bt709 = 1
pub moxcms::CicpColorPrimaries::Ebu3213 = 22
pub moxcms::CicpColorPrimaries::GenericFilm = 8
pub moxcms::CicpColorPrimaries::Reserved
pub moxcms::CicpColorPrimaries::Smpte240 = 7
pub moxcms::CicpColorPrimaries::Smpte431 = 11
pub moxcms::CicpColorPrimaries::Smpte432 = 12
pub moxcms::CicpColorPrimaries::Unspecified = 2
pub moxcms::CicpColorPrimaries::Xyz = 10
impl core::clone::Clone for moxcms::CicpColorPrimaries
pub fn moxcms::CicpColorPrimaries::clone(&self) -> moxcms::CicpColorPrimaries
impl core::cmp::PartialEq for moxcms::CicpColorPrimaries
pub fn moxcms::CicpColorPrimaries::eq(&self, other: &moxcms::CicpColorPrimaries) -> bool
impl core::convert::TryFrom<moxcms::CicpColorPrimaries> for moxcms::ColorPrimaries
pub type moxcms::ColorPrimaries::Error = moxcms::CmsError
pub fn moxcms::ColorPrimaries::try_from(value: moxcms::CicpColorPrimaries) -> core::result::Result<Self, Self::Error>
impl core::convert::TryFrom<u8> for moxcms::CicpColorPrimaries
pub type moxcms::CicpColorPrimaries::Error = moxcms::CmsError
pub fn moxcms::CicpColorPrimaries::try_from(value: u8) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::CicpColorPrimaries
pub fn moxcms::CicpColorPrimaries::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::CicpColorPrimaries
impl core::marker::StructuralPartialEq for moxcms::CicpColorPrimaries
impl core::marker::Freeze for moxcms::CicpColorPrimaries
impl core::marker::Send for moxcms::CicpColorPrimaries
impl core::marker::Sync for moxcms::CicpColorPrimaries
impl core::marker::Unpin for moxcms::CicpColorPrimaries
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::CicpColorPrimaries
impl core::panic::unwind_safe::UnwindSafe for moxcms::CicpColorPrimaries
impl<T, U> core::convert::Into<U> for moxcms::CicpColorPrimaries where U: core::convert::From<T>
pub fn moxcms::CicpColorPrimaries::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::CicpColorPrimaries where U: core::convert::Into<T>
pub type moxcms::CicpColorPrimaries::Error = core::convert::Infallible
pub fn moxcms::CicpColorPrimaries::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::CicpColorPrimaries where U: core::convert::TryFrom<T>
pub type moxcms::CicpColorPrimaries::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::CicpColorPrimaries::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::CicpColorPrimaries where T: core::clone::Clone
pub type moxcms::CicpColorPrimaries::Owned = T
pub fn moxcms::CicpColorPrimaries::clone_into(&self, target: &mut T)
pub fn moxcms::CicpColorPrimaries::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::CicpColorPrimaries where T: 'static + ?core::marker::Sized
pub fn moxcms::CicpColorPrimaries::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::CicpColorPrimaries where T: ?core::marker::Sized
pub fn moxcms::CicpColorPrimaries::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::CicpColorPrimaries where T: ?core::marker::Sized
pub fn moxcms::CicpColorPrimaries::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::CicpColorPrimaries where T: core::clone::Clone
pub unsafe fn moxcms::CicpColorPrimaries::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::CicpColorPrimaries
pub fn moxcms::CicpColorPrimaries::from(t: T) -> T
pub enum moxcms::CmsError
pub moxcms::CmsError::BuildTransferFunction
pub moxcms::CmsError::CurveLutIsTooLarge
pub moxcms::CmsError::DivisionByZero
pub moxcms::CmsError::InvalidAtoBLut
pub moxcms::CmsError::InvalidCicp
pub moxcms::CmsError::InvalidLayout
pub moxcms::CmsError::InvalidProfile
pub moxcms::CmsError::InvalidRenderingIntent
pub moxcms::CmsError::InvalidTrcCurve
pub moxcms::CmsError::LUTTablesInvalidKind
pub moxcms::CmsError::LaneMultipleOfChannels
pub moxcms::CmsError::LaneSizeMismatch
pub moxcms::CmsError::MalformedClut(moxcms::MalformedSize)
pub moxcms::CmsError::MalformedCurveLutTable(moxcms::MalformedSize)
pub moxcms::CmsError::OverflowingError
pub moxcms::CmsError::ParametricCurveZeroDivision
pub moxcms::CmsError::UnknownTag(u32)
pub moxcms::CmsError::UnknownTagTypeDefinition(u32)
pub moxcms::CmsError::UnsupportedChannelConfiguration
pub moxcms::CmsError::UnsupportedColorPrimaries(u8)
pub moxcms::CmsError::UnsupportedLutRenderingIntent(moxcms::RenderingIntent)
pub moxcms::CmsError::UnsupportedProfileConnection
pub moxcms::CmsError::UnsupportedTrc(u8)
impl core::clone::Clone for moxcms::CmsError
pub fn moxcms::CmsError::clone(&self) -> moxcms::CmsError
impl core::cmp::PartialEq for moxcms::CmsError
pub fn moxcms::CmsError::eq(&self, other: &moxcms::CmsError) -> bool
impl core::cmp::PartialOrd for moxcms::CmsError
pub fn moxcms::CmsError::partial_cmp(&self, other: &moxcms::CmsError) -> core::option::Option<core::cmp::Ordering>
impl core::error::Error for moxcms::CmsError
impl core::fmt::Debug for moxcms::CmsError
pub fn moxcms::CmsError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::fmt::Display for moxcms::CmsError
pub fn moxcms::CmsError::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::CmsError
impl core::marker::StructuralPartialEq for moxcms::CmsError
impl core::marker::Freeze for moxcms::CmsError
impl core::marker::Send for moxcms::CmsError
impl core::marker::Sync for moxcms::CmsError
impl core::marker::Unpin for moxcms::CmsError
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::CmsError
impl core::panic::unwind_safe::UnwindSafe for moxcms::CmsError
impl<T, U> core::convert::Into<U> for moxcms::CmsError where U: core::convert::From<T>
pub fn moxcms::CmsError::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::CmsError where U: core::convert::Into<T>
pub type moxcms::CmsError::Error = core::convert::Infallible
pub fn moxcms::CmsError::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::CmsError where U: core::convert::TryFrom<T>
pub type moxcms::CmsError::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::CmsError::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::CmsError where T: core::clone::Clone
pub type moxcms::CmsError::Owned = T
pub fn moxcms::CmsError::clone_into(&self, target: &mut T)
pub fn moxcms::CmsError::to_owned(&self) -> T
impl<T> alloc::string::ToString for moxcms::CmsError where T: core::fmt::Display + ?core::marker::Sized
pub fn moxcms::CmsError::to_string(&self) -> alloc::string::String
impl<T> core::any::Any for moxcms::CmsError where T: 'static + ?core::marker::Sized
pub fn moxcms::CmsError::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::CmsError where T: ?core::marker::Sized
pub fn moxcms::CmsError::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::CmsError where T: ?core::marker::Sized
pub fn moxcms::CmsError::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::CmsError where T: core::clone::Clone
pub unsafe fn moxcms::CmsError::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::CmsError
pub fn moxcms::CmsError::from(t: T) -> T
#[repr(u32)] pub enum moxcms::DataColorSpace
pub moxcms::DataColorSpace::Cmy
pub moxcms::DataColorSpace::Cmyk
pub moxcms::DataColorSpace::Color10
pub moxcms::DataColorSpace::Color11
pub moxcms::DataColorSpace::Color12
pub moxcms::DataColorSpace::Color13
pub moxcms::DataColorSpace::Color14
pub moxcms::DataColorSpace::Color15
pub moxcms::DataColorSpace::Color2
pub moxcms::DataColorSpace::Color3
pub moxcms::DataColorSpace::Color4
pub moxcms::DataColorSpace::Color5
pub moxcms::DataColorSpace::Color6
pub moxcms::DataColorSpace::Color7
pub moxcms::DataColorSpace::Color8
pub moxcms::DataColorSpace::Color9
pub moxcms::DataColorSpace::Gray
pub moxcms::DataColorSpace::Hls
pub moxcms::DataColorSpace::Hsv
pub moxcms::DataColorSpace::Lab
pub moxcms::DataColorSpace::Luv
pub moxcms::DataColorSpace::Rgb
pub moxcms::DataColorSpace::Xyz
pub moxcms::DataColorSpace::YCbr
pub moxcms::DataColorSpace::Yxy
impl moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::check_layout(self, layout: moxcms::Layout) -> core::result::Result<(), moxcms::CmsError>
impl core::clone::Clone for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::clone(&self) -> moxcms::DataColorSpace
impl core::cmp::Eq for moxcms::DataColorSpace
impl core::cmp::Ord for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::cmp(&self, other: &moxcms::DataColorSpace) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::eq(&self, other: &moxcms::DataColorSpace) -> bool
impl core::cmp::PartialOrd for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::partial_cmp(&self, other: &moxcms::DataColorSpace) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<moxcms::DataColorSpace> for u32
pub fn u32::from(val: moxcms::DataColorSpace) -> Self
impl core::convert::TryFrom<u32> for moxcms::DataColorSpace
pub type moxcms::DataColorSpace::Error = moxcms::CmsError
pub fn moxcms::DataColorSpace::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::default::Default for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::default() -> moxcms::DataColorSpace
impl core::fmt::Debug for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for moxcms::DataColorSpace
impl core::marker::StructuralPartialEq for moxcms::DataColorSpace
impl core::marker::Freeze for moxcms::DataColorSpace
impl core::marker::Send for moxcms::DataColorSpace
impl core::marker::Sync for moxcms::DataColorSpace
impl core::marker::Unpin for moxcms::DataColorSpace
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::DataColorSpace
impl core::panic::unwind_safe::UnwindSafe for moxcms::DataColorSpace
impl<T, U> core::convert::Into<U> for moxcms::DataColorSpace where U: core::convert::From<T>
pub fn moxcms::DataColorSpace::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::DataColorSpace where U: core::convert::Into<T>
pub type moxcms::DataColorSpace::Error = core::convert::Infallible
pub fn moxcms::DataColorSpace::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::DataColorSpace where U: core::convert::TryFrom<T>
pub type moxcms::DataColorSpace::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::DataColorSpace::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::DataColorSpace where T: core::clone::Clone
pub type moxcms::DataColorSpace::Owned = T
pub fn moxcms::DataColorSpace::clone_into(&self, target: &mut T)
pub fn moxcms::DataColorSpace::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::DataColorSpace where T: 'static + ?core::marker::Sized
pub fn moxcms::DataColorSpace::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::DataColorSpace where T: ?core::marker::Sized
pub fn moxcms::DataColorSpace::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::DataColorSpace where T: ?core::marker::Sized
pub fn moxcms::DataColorSpace::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::DataColorSpace where T: core::clone::Clone
pub unsafe fn moxcms::DataColorSpace::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::DataColorSpace
pub fn moxcms::DataColorSpace::from(t: T) -> T
pub enum moxcms::InterpolationMethod
pub moxcms::InterpolationMethod::Linear
impl core::clone::Clone for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::clone(&self) -> moxcms::InterpolationMethod
impl core::cmp::Eq for moxcms::InterpolationMethod
impl core::cmp::Ord for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::cmp(&self, other: &moxcms::InterpolationMethod) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::eq(&self, other: &moxcms::InterpolationMethod) -> bool
impl core::cmp::PartialOrd for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::partial_cmp(&self, other: &moxcms::InterpolationMethod) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::default() -> moxcms::InterpolationMethod
impl core::fmt::Debug for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for moxcms::InterpolationMethod
impl core::marker::StructuralPartialEq for moxcms::InterpolationMethod
impl core::marker::Freeze for moxcms::InterpolationMethod
impl core::marker::Send for moxcms::InterpolationMethod
impl core::marker::Sync for moxcms::InterpolationMethod
impl core::marker::Unpin for moxcms::InterpolationMethod
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::InterpolationMethod
impl core::panic::unwind_safe::UnwindSafe for moxcms::InterpolationMethod
impl<T, U> core::convert::Into<U> for moxcms::InterpolationMethod where U: core::convert::From<T>
pub fn moxcms::InterpolationMethod::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::InterpolationMethod where U: core::convert::Into<T>
pub type moxcms::InterpolationMethod::Error = core::convert::Infallible
pub fn moxcms::InterpolationMethod::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::InterpolationMethod where U: core::convert::TryFrom<T>
pub type moxcms::InterpolationMethod::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::InterpolationMethod::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::InterpolationMethod where T: core::clone::Clone
pub type moxcms::InterpolationMethod::Owned = T
pub fn moxcms::InterpolationMethod::clone_into(&self, target: &mut T)
pub fn moxcms::InterpolationMethod::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::InterpolationMethod where T: 'static + ?core::marker::Sized
pub fn moxcms::InterpolationMethod::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::InterpolationMethod where T: ?core::marker::Sized
pub fn moxcms::InterpolationMethod::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::InterpolationMethod where T: ?core::marker::Sized
pub fn moxcms::InterpolationMethod::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::InterpolationMethod where T: core::clone::Clone
pub unsafe fn moxcms::InterpolationMethod::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::InterpolationMethod
pub fn moxcms::InterpolationMethod::from(t: T) -> T
pub enum moxcms::Layout
pub moxcms::Layout::Gray = 2
pub moxcms::Layout::GrayAlpha = 3
pub moxcms::Layout::Rgb = 0
pub moxcms::Layout::Rgba = 1
impl moxcms::Layout
pub const fn moxcms::Layout::a_i(self) -> usize
pub const fn moxcms::Layout::b_i(self) -> usize
pub const fn moxcms::Layout::channels(self) -> usize
pub const fn moxcms::Layout::g_i(self) -> usize
pub const fn moxcms::Layout::has_alpha(self) -> bool
pub const fn moxcms::Layout::r_i(self) -> usize
impl moxcms::Layout
pub const fn moxcms::Layout::resolve(value: u8) -> Self
impl core::clone::Clone for moxcms::Layout
pub fn moxcms::Layout::clone(&self) -> moxcms::Layout
impl core::cmp::Eq for moxcms::Layout
impl core::cmp::Ord for moxcms::Layout
pub fn moxcms::Layout::cmp(&self, other: &moxcms::Layout) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::Layout
pub fn moxcms::Layout::eq(&self, other: &moxcms::Layout) -> bool
impl core::cmp::PartialOrd for moxcms::Layout
pub fn moxcms::Layout::partial_cmp(&self, other: &moxcms::Layout) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<u8> for moxcms::Layout
pub fn moxcms::Layout::from(value: u8) -> Self
impl core::fmt::Debug for moxcms::Layout
pub fn moxcms::Layout::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Layout
impl core::marker::StructuralPartialEq for moxcms::Layout
impl core::marker::Freeze for moxcms::Layout
impl core::marker::Send for moxcms::Layout
impl core::marker::Sync for moxcms::Layout
impl core::marker::Unpin for moxcms::Layout
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Layout
impl core::panic::unwind_safe::UnwindSafe for moxcms::Layout
impl<T, U> core::convert::Into<U> for moxcms::Layout where U: core::convert::From<T>
pub fn moxcms::Layout::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Layout where U: core::convert::Into<T>
pub type moxcms::Layout::Error = core::convert::Infallible
pub fn moxcms::Layout::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Layout where U: core::convert::TryFrom<T>
pub type moxcms::Layout::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Layout::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Layout where T: core::clone::Clone
pub type moxcms::Layout::Owned = T
pub fn moxcms::Layout::clone_into(&self, target: &mut T)
pub fn moxcms::Layout::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Layout where T: 'static + ?core::marker::Sized
pub fn moxcms::Layout::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Layout where T: ?core::marker::Sized
pub fn moxcms::Layout::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Layout where T: ?core::marker::Sized
pub fn moxcms::Layout::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Layout where T: core::clone::Clone
pub unsafe fn moxcms::Layout::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Layout
pub fn moxcms::Layout::from(t: T) -> T
pub enum moxcms::LutStore
pub moxcms::LutStore::Store16(alloc::vec::Vec<u16>)
pub moxcms::LutStore::Store8(alloc::vec::Vec<u8>)
impl moxcms::LutStore
pub fn moxcms::LutStore::to_clut_f32(&self) -> alloc::vec::Vec<f32>
impl core::clone::Clone for moxcms::LutStore
pub fn moxcms::LutStore::clone(&self) -> moxcms::LutStore
impl core::fmt::Debug for moxcms::LutStore
pub fn moxcms::LutStore::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::LutStore
impl core::marker::Send for moxcms::LutStore
impl core::marker::Sync for moxcms::LutStore
impl core::marker::Unpin for moxcms::LutStore
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LutStore
impl core::panic::unwind_safe::UnwindSafe for moxcms::LutStore
impl<T, U> core::convert::Into<U> for moxcms::LutStore where U: core::convert::From<T>
pub fn moxcms::LutStore::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LutStore where U: core::convert::Into<T>
pub type moxcms::LutStore::Error = core::convert::Infallible
pub fn moxcms::LutStore::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LutStore where U: core::convert::TryFrom<T>
pub type moxcms::LutStore::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LutStore::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LutStore where T: core::clone::Clone
pub type moxcms::LutStore::Owned = T
pub fn moxcms::LutStore::clone_into(&self, target: &mut T)
pub fn moxcms::LutStore::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LutStore where T: 'static + ?core::marker::Sized
pub fn moxcms::LutStore::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LutStore where T: ?core::marker::Sized
pub fn moxcms::LutStore::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LutStore where T: ?core::marker::Sized
pub fn moxcms::LutStore::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LutStore where T: core::clone::Clone
pub unsafe fn moxcms::LutStore::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LutStore
pub fn moxcms::LutStore::from(t: T) -> T
pub enum moxcms::LutType
pub moxcms::LutType::Lut16
pub moxcms::LutType::Lut8
pub moxcms::LutType::LutMab
pub moxcms::LutType::LutMba
impl core::clone::Clone for moxcms::LutType
pub fn moxcms::LutType::clone(&self) -> moxcms::LutType
impl core::cmp::Eq for moxcms::LutType
impl core::cmp::Ord for moxcms::LutType
pub fn moxcms::LutType::cmp(&self, other: &moxcms::LutType) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::LutType
pub fn moxcms::LutType::eq(&self, other: &moxcms::LutType) -> bool
impl core::cmp::PartialOrd for moxcms::LutType
pub fn moxcms::LutType::partial_cmp(&self, other: &moxcms::LutType) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<moxcms::LutType> for u32
pub fn u32::from(val: moxcms::LutType) -> Self
impl core::convert::TryFrom<u32> for moxcms::LutType
pub type moxcms::LutType::Error = moxcms::CmsError
pub fn moxcms::LutType::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::LutType
pub fn moxcms::LutType::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::LutType
impl core::marker::StructuralPartialEq for moxcms::LutType
impl core::marker::Freeze for moxcms::LutType
impl core::marker::Send for moxcms::LutType
impl core::marker::Sync for moxcms::LutType
impl core::marker::Unpin for moxcms::LutType
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LutType
impl core::panic::unwind_safe::UnwindSafe for moxcms::LutType
impl<T, U> core::convert::Into<U> for moxcms::LutType where U: core::convert::From<T>
pub fn moxcms::LutType::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LutType where U: core::convert::Into<T>
pub type moxcms::LutType::Error = core::convert::Infallible
pub fn moxcms::LutType::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LutType where U: core::convert::TryFrom<T>
pub type moxcms::LutType::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LutType::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LutType where T: core::clone::Clone
pub type moxcms::LutType::Owned = T
pub fn moxcms::LutType::clone_into(&self, target: &mut T)
pub fn moxcms::LutType::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LutType where T: 'static + ?core::marker::Sized
pub fn moxcms::LutType::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LutType where T: ?core::marker::Sized
pub fn moxcms::LutType::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LutType where T: ?core::marker::Sized
pub fn moxcms::LutType::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LutType where T: core::clone::Clone
pub unsafe fn moxcms::LutType::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LutType
pub fn moxcms::LutType::from(t: T) -> T
pub enum moxcms::LutWarehouse
pub moxcms::LutWarehouse::Lut(moxcms::profile::LutDataType)
pub moxcms::LutWarehouse::Multidimensional(moxcms::LutMultidimensionalType)
impl core::clone::Clone for moxcms::LutWarehouse
pub fn moxcms::LutWarehouse::clone(&self) -> moxcms::LutWarehouse
impl core::fmt::Debug for moxcms::LutWarehouse
pub fn moxcms::LutWarehouse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::LutWarehouse
impl core::marker::Send for moxcms::LutWarehouse
impl core::marker::Sync for moxcms::LutWarehouse
impl core::marker::Unpin for moxcms::LutWarehouse
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LutWarehouse
impl core::panic::unwind_safe::UnwindSafe for moxcms::LutWarehouse
impl<T, U> core::convert::Into<U> for moxcms::LutWarehouse where U: core::convert::From<T>
pub fn moxcms::LutWarehouse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LutWarehouse where U: core::convert::Into<T>
pub type moxcms::LutWarehouse::Error = core::convert::Infallible
pub fn moxcms::LutWarehouse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LutWarehouse where U: core::convert::TryFrom<T>
pub type moxcms::LutWarehouse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LutWarehouse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LutWarehouse where T: core::clone::Clone
pub type moxcms::LutWarehouse::Owned = T
pub fn moxcms::LutWarehouse::clone_into(&self, target: &mut T)
pub fn moxcms::LutWarehouse::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LutWarehouse where T: 'static + ?core::marker::Sized
pub fn moxcms::LutWarehouse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LutWarehouse where T: ?core::marker::Sized
pub fn moxcms::LutWarehouse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LutWarehouse where T: ?core::marker::Sized
pub fn moxcms::LutWarehouse::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LutWarehouse where T: core::clone::Clone
pub unsafe fn moxcms::LutWarehouse::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LutWarehouse
pub fn moxcms::LutWarehouse::from(t: T) -> T
#[repr(C)] pub enum moxcms::MatrixCoefficients
pub moxcms::MatrixCoefficients::Bt2020Cl = 10
pub moxcms::MatrixCoefficients::Bt2020Ncl = 9
pub moxcms::MatrixCoefficients::Bt470Bg = 5
pub moxcms::MatrixCoefficients::Bt709 = 1
pub moxcms::MatrixCoefficients::ChromaticityDerivedCL = 13
pub moxcms::MatrixCoefficients::ChromaticityDerivedNCL = 12
pub moxcms::MatrixCoefficients::Fcc = 4
pub moxcms::MatrixCoefficients::ICtCp = 14
pub moxcms::MatrixCoefficients::Identity = 0
pub moxcms::MatrixCoefficients::Reserved = 3
pub moxcms::MatrixCoefficients::Smpte170m = 6
pub moxcms::MatrixCoefficients::Smpte2085 = 11
pub moxcms::MatrixCoefficients::Smpte240m = 7
pub moxcms::MatrixCoefficients::Unspecified = 2
pub moxcms::MatrixCoefficients::YCgCo = 8
impl core::clone::Clone for moxcms::MatrixCoefficients
pub fn moxcms::MatrixCoefficients::clone(&self) -> moxcms::MatrixCoefficients
impl core::cmp::Eq for moxcms::MatrixCoefficients
impl core::cmp::PartialEq for moxcms::MatrixCoefficients
pub fn moxcms::MatrixCoefficients::eq(&self, other: &moxcms::MatrixCoefficients) -> bool
impl core::convert::TryFrom<u8> for moxcms::MatrixCoefficients
pub type moxcms::MatrixCoefficients::Error = moxcms::CmsError
pub fn moxcms::MatrixCoefficients::try_from(value: u8) -> core::result::Result<Self, moxcms::CmsError>
impl core::fmt::Debug for moxcms::MatrixCoefficients
pub fn moxcms::MatrixCoefficients::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::MatrixCoefficients
impl core::marker::StructuralPartialEq for moxcms::MatrixCoefficients
impl core::marker::Freeze for moxcms::MatrixCoefficients
impl core::marker::Send for moxcms::MatrixCoefficients
impl core::marker::Sync for moxcms::MatrixCoefficients
impl core::marker::Unpin for moxcms::MatrixCoefficients
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::MatrixCoefficients
impl core::panic::unwind_safe::UnwindSafe for moxcms::MatrixCoefficients
impl<T, U> core::convert::Into<U> for moxcms::MatrixCoefficients where U: core::convert::From<T>
pub fn moxcms::MatrixCoefficients::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::MatrixCoefficients where U: core::convert::Into<T>
pub type moxcms::MatrixCoefficients::Error = core::convert::Infallible
pub fn moxcms::MatrixCoefficients::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::MatrixCoefficients where U: core::convert::TryFrom<T>
pub type moxcms::MatrixCoefficients::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::MatrixCoefficients::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::MatrixCoefficients where T: core::clone::Clone
pub type moxcms::MatrixCoefficients::Owned = T
pub fn moxcms::MatrixCoefficients::clone_into(&self, target: &mut T)
pub fn moxcms::MatrixCoefficients::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::MatrixCoefficients where T: 'static + ?core::marker::Sized
pub fn moxcms::MatrixCoefficients::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::MatrixCoefficients where T: ?core::marker::Sized
pub fn moxcms::MatrixCoefficients::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::MatrixCoefficients where T: ?core::marker::Sized
pub fn moxcms::MatrixCoefficients::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::MatrixCoefficients where T: core::clone::Clone
pub unsafe fn moxcms::MatrixCoefficients::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::MatrixCoefficients
pub fn moxcms::MatrixCoefficients::from(t: T) -> T
pub enum moxcms::MeasurementGeometry
pub moxcms::MeasurementGeometry::D0to0
pub moxcms::MeasurementGeometry::D45to45
pub moxcms::MeasurementGeometry::Unknown
impl core::clone::Clone for moxcms::MeasurementGeometry
pub fn moxcms::MeasurementGeometry::clone(&self) -> moxcms::MeasurementGeometry
impl core::convert::From<u32> for moxcms::MeasurementGeometry
pub fn moxcms::MeasurementGeometry::from(value: u32) -> Self
impl core::fmt::Debug for moxcms::MeasurementGeometry
pub fn moxcms::MeasurementGeometry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::MeasurementGeometry
impl core::marker::Freeze for moxcms::MeasurementGeometry
impl core::marker::Send for moxcms::MeasurementGeometry
impl core::marker::Sync for moxcms::MeasurementGeometry
impl core::marker::Unpin for moxcms::MeasurementGeometry
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::MeasurementGeometry
impl core::panic::unwind_safe::UnwindSafe for moxcms::MeasurementGeometry
impl<T, U> core::convert::Into<U> for moxcms::MeasurementGeometry where U: core::convert::From<T>
pub fn moxcms::MeasurementGeometry::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::MeasurementGeometry where U: core::convert::Into<T>
pub type moxcms::MeasurementGeometry::Error = core::convert::Infallible
pub fn moxcms::MeasurementGeometry::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::MeasurementGeometry where U: core::convert::TryFrom<T>
pub type moxcms::MeasurementGeometry::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::MeasurementGeometry::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::MeasurementGeometry where T: core::clone::Clone
pub type moxcms::MeasurementGeometry::Owned = T
pub fn moxcms::MeasurementGeometry::clone_into(&self, target: &mut T)
pub fn moxcms::MeasurementGeometry::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::MeasurementGeometry where T: 'static + ?core::marker::Sized
pub fn moxcms::MeasurementGeometry::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::MeasurementGeometry where T: ?core::marker::Sized
pub fn moxcms::MeasurementGeometry::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::MeasurementGeometry where T: ?core::marker::Sized
pub fn moxcms::MeasurementGeometry::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::MeasurementGeometry where T: core::clone::Clone
pub unsafe fn moxcms::MeasurementGeometry::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::MeasurementGeometry
pub fn moxcms::MeasurementGeometry::from(t: T) -> T
#[repr(u32)] pub enum moxcms::ProfileClass
pub moxcms::ProfileClass::Abstract
pub moxcms::ProfileClass::ColorSpace
pub moxcms::ProfileClass::DeviceLink
pub moxcms::ProfileClass::DisplayDevice
pub moxcms::ProfileClass::InputDevice
pub moxcms::ProfileClass::Named
pub moxcms::ProfileClass::OutputDevice
impl core::clone::Clone for moxcms::ProfileClass
pub fn moxcms::ProfileClass::clone(&self) -> moxcms::ProfileClass
impl core::cmp::Eq for moxcms::ProfileClass
impl core::cmp::Ord for moxcms::ProfileClass
pub fn moxcms::ProfileClass::cmp(&self, other: &moxcms::ProfileClass) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::ProfileClass
pub fn moxcms::ProfileClass::eq(&self, other: &moxcms::ProfileClass) -> bool
impl core::cmp::PartialOrd for moxcms::ProfileClass
pub fn moxcms::ProfileClass::partial_cmp(&self, other: &moxcms::ProfileClass) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<moxcms::ProfileClass> for u32
pub fn u32::from(val: moxcms::ProfileClass) -> Self
impl core::convert::TryFrom<u32> for moxcms::ProfileClass
pub type moxcms::ProfileClass::Error = moxcms::CmsError
pub fn moxcms::ProfileClass::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::default::Default for moxcms::ProfileClass
pub fn moxcms::ProfileClass::default() -> moxcms::ProfileClass
impl core::fmt::Debug for moxcms::ProfileClass
pub fn moxcms::ProfileClass::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ProfileClass
impl core::marker::StructuralPartialEq for moxcms::ProfileClass
impl core::marker::Freeze for moxcms::ProfileClass
impl core::marker::Send for moxcms::ProfileClass
impl core::marker::Sync for moxcms::ProfileClass
impl core::marker::Unpin for moxcms::ProfileClass
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ProfileClass
impl core::panic::unwind_safe::UnwindSafe for moxcms::ProfileClass
impl<T, U> core::convert::Into<U> for moxcms::ProfileClass where U: core::convert::From<T>
pub fn moxcms::ProfileClass::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ProfileClass where U: core::convert::Into<T>
pub type moxcms::ProfileClass::Error = core::convert::Infallible
pub fn moxcms::ProfileClass::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ProfileClass where U: core::convert::TryFrom<T>
pub type moxcms::ProfileClass::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ProfileClass::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ProfileClass where T: core::clone::Clone
pub type moxcms::ProfileClass::Owned = T
pub fn moxcms::ProfileClass::clone_into(&self, target: &mut T)
pub fn moxcms::ProfileClass::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ProfileClass where T: 'static + ?core::marker::Sized
pub fn moxcms::ProfileClass::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ProfileClass where T: ?core::marker::Sized
pub fn moxcms::ProfileClass::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ProfileClass where T: ?core::marker::Sized
pub fn moxcms::ProfileClass::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ProfileClass where T: core::clone::Clone
pub unsafe fn moxcms::ProfileClass::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ProfileClass
pub fn moxcms::ProfileClass::from(t: T) -> T
#[repr(u32)] pub enum moxcms::ProfileSignature
pub moxcms::ProfileSignature::Acsp
impl core::clone::Clone for moxcms::ProfileSignature
pub fn moxcms::ProfileSignature::clone(&self) -> moxcms::ProfileSignature
impl core::cmp::Eq for moxcms::ProfileSignature
impl core::cmp::PartialEq for moxcms::ProfileSignature
pub fn moxcms::ProfileSignature::eq(&self, other: &moxcms::ProfileSignature) -> bool
impl core::convert::From<moxcms::ProfileSignature> for u32
pub fn u32::from(value: moxcms::ProfileSignature) -> Self
impl core::convert::TryFrom<u32> for moxcms::ProfileSignature
pub type moxcms::ProfileSignature::Error = moxcms::CmsError
pub fn moxcms::ProfileSignature::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::ProfileSignature
pub fn moxcms::ProfileSignature::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ProfileSignature
impl core::marker::StructuralPartialEq for moxcms::ProfileSignature
impl core::marker::Freeze for moxcms::ProfileSignature
impl core::marker::Send for moxcms::ProfileSignature
impl core::marker::Sync for moxcms::ProfileSignature
impl core::marker::Unpin for moxcms::ProfileSignature
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ProfileSignature
impl core::panic::unwind_safe::UnwindSafe for moxcms::ProfileSignature
impl<T, U> core::convert::Into<U> for moxcms::ProfileSignature where U: core::convert::From<T>
pub fn moxcms::ProfileSignature::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ProfileSignature where U: core::convert::Into<T>
pub type moxcms::ProfileSignature::Error = core::convert::Infallible
pub fn moxcms::ProfileSignature::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ProfileSignature where U: core::convert::TryFrom<T>
pub type moxcms::ProfileSignature::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ProfileSignature::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ProfileSignature where T: core::clone::Clone
pub type moxcms::ProfileSignature::Owned = T
pub fn moxcms::ProfileSignature::clone_into(&self, target: &mut T)
pub fn moxcms::ProfileSignature::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ProfileSignature where T: 'static + ?core::marker::Sized
pub fn moxcms::ProfileSignature::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ProfileSignature where T: ?core::marker::Sized
pub fn moxcms::ProfileSignature::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ProfileSignature where T: ?core::marker::Sized
pub fn moxcms::ProfileSignature::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ProfileSignature where T: core::clone::Clone
pub unsafe fn moxcms::ProfileSignature::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ProfileSignature
pub fn moxcms::ProfileSignature::from(t: T) -> T
pub enum moxcms::ProfileText
pub moxcms::ProfileText::Description(moxcms::DescriptionString)
pub moxcms::ProfileText::Localizable(alloc::vec::Vec<moxcms::LocalizableString>)
pub moxcms::ProfileText::PlainString(alloc::string::String)
impl core::clone::Clone for moxcms::ProfileText
pub fn moxcms::ProfileText::clone(&self) -> moxcms::ProfileText
impl core::fmt::Debug for moxcms::ProfileText
pub fn moxcms::ProfileText::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::ProfileText
impl core::marker::Send for moxcms::ProfileText
impl core::marker::Sync for moxcms::ProfileText
impl core::marker::Unpin for moxcms::ProfileText
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ProfileText
impl core::panic::unwind_safe::UnwindSafe for moxcms::ProfileText
impl<T, U> core::convert::Into<U> for moxcms::ProfileText where U: core::convert::From<T>
pub fn moxcms::ProfileText::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ProfileText where U: core::convert::Into<T>
pub type moxcms::ProfileText::Error = core::convert::Infallible
pub fn moxcms::ProfileText::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ProfileText where U: core::convert::TryFrom<T>
pub type moxcms::ProfileText::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ProfileText::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ProfileText where T: core::clone::Clone
pub type moxcms::ProfileText::Owned = T
pub fn moxcms::ProfileText::clone_into(&self, target: &mut T)
pub fn moxcms::ProfileText::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ProfileText where T: 'static + ?core::marker::Sized
pub fn moxcms::ProfileText::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ProfileText where T: ?core::marker::Sized
pub fn moxcms::ProfileText::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ProfileText where T: ?core::marker::Sized
pub fn moxcms::ProfileText::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ProfileText where T: core::clone::Clone
pub unsafe fn moxcms::ProfileText::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ProfileText
pub fn moxcms::ProfileText::from(t: T) -> T
#[repr(u32)] pub enum moxcms::ProfileVersion
pub moxcms::ProfileVersion::Unknown
pub moxcms::ProfileVersion::V2_0 = 33554432
pub moxcms::ProfileVersion::V2_1 = 34603008
pub moxcms::ProfileVersion::V2_2 = 35651584
pub moxcms::ProfileVersion::V2_3 = 36700160
pub moxcms::ProfileVersion::V2_4 = 37748736
pub moxcms::ProfileVersion::V4_0 = 67108864
pub moxcms::ProfileVersion::V4_1 = 68157440
pub moxcms::ProfileVersion::V4_2 = 69206016
pub moxcms::ProfileVersion::V4_3 = 70254592
pub moxcms::ProfileVersion::V4_4 = 71303168
impl core::clone::Clone for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::clone(&self) -> moxcms::ProfileVersion
impl core::cmp::Eq for moxcms::ProfileVersion
impl core::cmp::Ord for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::cmp(&self, other: &moxcms::ProfileVersion) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::eq(&self, other: &moxcms::ProfileVersion) -> bool
impl core::cmp::PartialOrd for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::partial_cmp(&self, other: &moxcms::ProfileVersion) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<moxcms::ProfileVersion> for u32
pub fn u32::from(value: moxcms::ProfileVersion) -> Self
impl core::convert::TryFrom<u32> for moxcms::ProfileVersion
pub type moxcms::ProfileVersion::Error = moxcms::CmsError
pub fn moxcms::ProfileVersion::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::default::Default for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::default() -> moxcms::ProfileVersion
impl core::fmt::Debug for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ProfileVersion
impl core::marker::StructuralPartialEq for moxcms::ProfileVersion
impl core::marker::Freeze for moxcms::ProfileVersion
impl core::marker::Send for moxcms::ProfileVersion
impl core::marker::Sync for moxcms::ProfileVersion
impl core::marker::Unpin for moxcms::ProfileVersion
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ProfileVersion
impl core::panic::unwind_safe::UnwindSafe for moxcms::ProfileVersion
impl<T, U> core::convert::Into<U> for moxcms::ProfileVersion where U: core::convert::From<T>
pub fn moxcms::ProfileVersion::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ProfileVersion where U: core::convert::Into<T>
pub type moxcms::ProfileVersion::Error = core::convert::Infallible
pub fn moxcms::ProfileVersion::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ProfileVersion where U: core::convert::TryFrom<T>
pub type moxcms::ProfileVersion::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ProfileVersion::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ProfileVersion where T: core::clone::Clone
pub type moxcms::ProfileVersion::Owned = T
pub fn moxcms::ProfileVersion::clone_into(&self, target: &mut T)
pub fn moxcms::ProfileVersion::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ProfileVersion where T: 'static + ?core::marker::Sized
pub fn moxcms::ProfileVersion::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ProfileVersion where T: ?core::marker::Sized
pub fn moxcms::ProfileVersion::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ProfileVersion where T: ?core::marker::Sized
pub fn moxcms::ProfileVersion::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ProfileVersion where T: core::clone::Clone
pub unsafe fn moxcms::ProfileVersion::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ProfileVersion
pub fn moxcms::ProfileVersion::from(t: T) -> T
#[repr(u32)] pub enum moxcms::RenderingIntent
pub moxcms::RenderingIntent::AbsoluteColorimetric = 3
pub moxcms::RenderingIntent::Perceptual = 0
pub moxcms::RenderingIntent::RelativeColorimetric = 1
pub moxcms::RenderingIntent::Saturation = 2
impl core::clone::Clone for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::clone(&self) -> moxcms::RenderingIntent
impl core::cmp::Eq for moxcms::RenderingIntent
impl core::cmp::Ord for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::cmp(&self, other: &moxcms::RenderingIntent) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::eq(&self, other: &moxcms::RenderingIntent) -> bool
impl core::cmp::PartialOrd for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::partial_cmp(&self, other: &moxcms::RenderingIntent) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<moxcms::RenderingIntent> for u32
pub fn u32::from(value: moxcms::RenderingIntent) -> Self
impl core::convert::TryFrom<u32> for moxcms::RenderingIntent
pub type moxcms::RenderingIntent::Error = moxcms::CmsError
pub fn moxcms::RenderingIntent::try_from(value: u32) -> core::result::Result<Self, Self::Error>
impl core::default::Default for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::default() -> moxcms::RenderingIntent
impl core::fmt::Debug for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for moxcms::RenderingIntent
impl core::marker::StructuralPartialEq for moxcms::RenderingIntent
impl core::marker::Freeze for moxcms::RenderingIntent
impl core::marker::Send for moxcms::RenderingIntent
impl core::marker::Sync for moxcms::RenderingIntent
impl core::marker::Unpin for moxcms::RenderingIntent
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::RenderingIntent
impl core::panic::unwind_safe::UnwindSafe for moxcms::RenderingIntent
impl<T, U> core::convert::Into<U> for moxcms::RenderingIntent where U: core::convert::From<T>
pub fn moxcms::RenderingIntent::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::RenderingIntent where U: core::convert::Into<T>
pub type moxcms::RenderingIntent::Error = core::convert::Infallible
pub fn moxcms::RenderingIntent::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::RenderingIntent where U: core::convert::TryFrom<T>
pub type moxcms::RenderingIntent::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::RenderingIntent::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::RenderingIntent where T: core::clone::Clone
pub type moxcms::RenderingIntent::Owned = T
pub fn moxcms::RenderingIntent::clone_into(&self, target: &mut T)
pub fn moxcms::RenderingIntent::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::RenderingIntent where T: 'static + ?core::marker::Sized
pub fn moxcms::RenderingIntent::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::RenderingIntent where T: ?core::marker::Sized
pub fn moxcms::RenderingIntent::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::RenderingIntent where T: ?core::marker::Sized
pub fn moxcms::RenderingIntent::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::RenderingIntent where T: core::clone::Clone
pub unsafe fn moxcms::RenderingIntent::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::RenderingIntent
pub fn moxcms::RenderingIntent::from(t: T) -> T
pub enum moxcms::StandardIlluminant
pub moxcms::StandardIlluminant::A
pub moxcms::StandardIlluminant::D50
pub moxcms::StandardIlluminant::D55
pub moxcms::StandardIlluminant::D65
pub moxcms::StandardIlluminant::D93
pub moxcms::StandardIlluminant::EquiPower
pub moxcms::StandardIlluminant::F2
pub moxcms::StandardIlluminant::F8
pub moxcms::StandardIlluminant::Unknown
impl core::clone::Clone for moxcms::StandardIlluminant
pub fn moxcms::StandardIlluminant::clone(&self) -> moxcms::StandardIlluminant
impl core::convert::From<moxcms::StandardIlluminant> for u32
pub fn u32::from(value: moxcms::StandardIlluminant) -> Self
impl core::convert::From<u32> for moxcms::StandardIlluminant
pub fn moxcms::StandardIlluminant::from(value: u32) -> Self
impl core::fmt::Debug for moxcms::StandardIlluminant
pub fn moxcms::StandardIlluminant::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::StandardIlluminant
impl core::marker::Freeze for moxcms::StandardIlluminant
impl core::marker::Send for moxcms::StandardIlluminant
impl core::marker::Sync for moxcms::StandardIlluminant
impl core::marker::Unpin for moxcms::StandardIlluminant
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::StandardIlluminant
impl core::panic::unwind_safe::UnwindSafe for moxcms::StandardIlluminant
impl<T, U> core::convert::Into<U> for moxcms::StandardIlluminant where U: core::convert::From<T>
pub fn moxcms::StandardIlluminant::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::StandardIlluminant where U: core::convert::Into<T>
pub type moxcms::StandardIlluminant::Error = core::convert::Infallible
pub fn moxcms::StandardIlluminant::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::StandardIlluminant where U: core::convert::TryFrom<T>
pub type moxcms::StandardIlluminant::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::StandardIlluminant::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::StandardIlluminant where T: core::clone::Clone
pub type moxcms::StandardIlluminant::Owned = T
pub fn moxcms::StandardIlluminant::clone_into(&self, target: &mut T)
pub fn moxcms::StandardIlluminant::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::StandardIlluminant where T: 'static + ?core::marker::Sized
pub fn moxcms::StandardIlluminant::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::StandardIlluminant where T: ?core::marker::Sized
pub fn moxcms::StandardIlluminant::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::StandardIlluminant where T: ?core::marker::Sized
pub fn moxcms::StandardIlluminant::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::StandardIlluminant where T: core::clone::Clone
pub unsafe fn moxcms::StandardIlluminant::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::StandardIlluminant
pub fn moxcms::StandardIlluminant::from(t: T) -> T
pub enum moxcms::StandardObserver
pub moxcms::StandardObserver::D50
pub moxcms::StandardObserver::D65
pub moxcms::StandardObserver::Unknown
impl core::clone::Clone for moxcms::StandardObserver
pub fn moxcms::StandardObserver::clone(&self) -> moxcms::StandardObserver
impl core::convert::From<u32> for moxcms::StandardObserver
pub fn moxcms::StandardObserver::from(value: u32) -> Self
impl core::fmt::Debug for moxcms::StandardObserver
pub fn moxcms::StandardObserver::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::StandardObserver
impl core::marker::Freeze for moxcms::StandardObserver
impl core::marker::Send for moxcms::StandardObserver
impl core::marker::Sync for moxcms::StandardObserver
impl core::marker::Unpin for moxcms::StandardObserver
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::StandardObserver
impl core::panic::unwind_safe::UnwindSafe for moxcms::StandardObserver
impl<T, U> core::convert::Into<U> for moxcms::StandardObserver where U: core::convert::From<T>
pub fn moxcms::StandardObserver::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::StandardObserver where U: core::convert::Into<T>
pub type moxcms::StandardObserver::Error = core::convert::Infallible
pub fn moxcms::StandardObserver::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::StandardObserver where U: core::convert::TryFrom<T>
pub type moxcms::StandardObserver::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::StandardObserver::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::StandardObserver where T: core::clone::Clone
pub type moxcms::StandardObserver::Owned = T
pub fn moxcms::StandardObserver::clone_into(&self, target: &mut T)
pub fn moxcms::StandardObserver::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::StandardObserver where T: 'static + ?core::marker::Sized
pub fn moxcms::StandardObserver::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::StandardObserver where T: ?core::marker::Sized
pub fn moxcms::StandardObserver::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::StandardObserver where T: ?core::marker::Sized
pub fn moxcms::StandardObserver::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::StandardObserver where T: core::clone::Clone
pub unsafe fn moxcms::StandardObserver::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::StandardObserver
pub fn moxcms::StandardObserver::from(t: T) -> T
pub enum moxcms::TechnologySignatures
pub moxcms::TechnologySignatures::ActiveMatrixDisplay
pub moxcms::TechnologySignatures::CathodeRayTubeDisplay
pub moxcms::TechnologySignatures::DigitalCamera
pub moxcms::TechnologySignatures::DigitalCinemaProjector
pub moxcms::TechnologySignatures::DigitalMotionPictureCamera
pub moxcms::TechnologySignatures::DyeSublimationPrinter
pub moxcms::TechnologySignatures::ElectrophotographicPrinter
pub moxcms::TechnologySignatures::ElectrostaticPrinter
pub moxcms::TechnologySignatures::FilmScanner
pub moxcms::TechnologySignatures::FilmWriter
pub moxcms::TechnologySignatures::Flexography
pub moxcms::TechnologySignatures::Gravure
pub moxcms::TechnologySignatures::InkJetPrinter
pub moxcms::TechnologySignatures::LiquidCrystalDisplay
pub moxcms::TechnologySignatures::MotionPictureFilmRecorder
pub moxcms::TechnologySignatures::MotionPictureFilmScanner
pub moxcms::TechnologySignatures::OffsetLithography
pub moxcms::TechnologySignatures::OrganicLedDisplay
pub moxcms::TechnologySignatures::PassiveMatrixDisplay
pub moxcms::TechnologySignatures::PhotoCd
pub moxcms::TechnologySignatures::PhotographicImageSetter
pub moxcms::TechnologySignatures::PhotographicPaperPrinter
pub moxcms::TechnologySignatures::ProjectionTelevision
pub moxcms::TechnologySignatures::ReflectiveScanner
pub moxcms::TechnologySignatures::Silkscreen
pub moxcms::TechnologySignatures::ThermalWaxPrinter
pub moxcms::TechnologySignatures::Unknown(u32)
pub moxcms::TechnologySignatures::VideoCamera
pub moxcms::TechnologySignatures::VideoMonitor
impl core::clone::Clone for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::clone(&self) -> moxcms::TechnologySignatures
impl core::cmp::Eq for moxcms::TechnologySignatures
impl core::cmp::Ord for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::cmp(&self, other: &moxcms::TechnologySignatures) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::eq(&self, other: &moxcms::TechnologySignatures) -> bool
impl core::cmp::PartialOrd for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::partial_cmp(&self, other: &moxcms::TechnologySignatures) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<u32> for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::from(value: u32) -> Self
impl core::fmt::Debug for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::TechnologySignatures
impl core::marker::StructuralPartialEq for moxcms::TechnologySignatures
impl core::marker::Freeze for moxcms::TechnologySignatures
impl core::marker::Send for moxcms::TechnologySignatures
impl core::marker::Sync for moxcms::TechnologySignatures
impl core::marker::Unpin for moxcms::TechnologySignatures
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::TechnologySignatures
impl core::panic::unwind_safe::UnwindSafe for moxcms::TechnologySignatures
impl<T, U> core::convert::Into<U> for moxcms::TechnologySignatures where U: core::convert::From<T>
pub fn moxcms::TechnologySignatures::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::TechnologySignatures where U: core::convert::Into<T>
pub type moxcms::TechnologySignatures::Error = core::convert::Infallible
pub fn moxcms::TechnologySignatures::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::TechnologySignatures where U: core::convert::TryFrom<T>
pub type moxcms::TechnologySignatures::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::TechnologySignatures::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::TechnologySignatures where T: core::clone::Clone
pub type moxcms::TechnologySignatures::Owned = T
pub fn moxcms::TechnologySignatures::clone_into(&self, target: &mut T)
pub fn moxcms::TechnologySignatures::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::TechnologySignatures where T: 'static + ?core::marker::Sized
pub fn moxcms::TechnologySignatures::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::TechnologySignatures where T: ?core::marker::Sized
pub fn moxcms::TechnologySignatures::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::TechnologySignatures where T: ?core::marker::Sized
pub fn moxcms::TechnologySignatures::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::TechnologySignatures where T: core::clone::Clone
pub unsafe fn moxcms::TechnologySignatures::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::TechnologySignatures
pub fn moxcms::TechnologySignatures::from(t: T) -> T
pub enum moxcms::ToneReprCurve
pub moxcms::ToneReprCurve::Lut(alloc::vec::Vec<u16>)
pub moxcms::ToneReprCurve::Parametric(alloc::vec::Vec<f32>)
impl core::clone::Clone for moxcms::ToneReprCurve
pub fn moxcms::ToneReprCurve::clone(&self) -> moxcms::ToneReprCurve
impl core::convert::TryFrom<moxcms::TransferCharacteristics> for moxcms::ToneReprCurve
pub type moxcms::ToneReprCurve::Error = moxcms::CmsError
pub fn moxcms::ToneReprCurve::try_from(value: moxcms::TransferCharacteristics) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::ToneReprCurve
pub fn moxcms::ToneReprCurve::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::ToneReprCurve
impl core::marker::Send for moxcms::ToneReprCurve
impl core::marker::Sync for moxcms::ToneReprCurve
impl core::marker::Unpin for moxcms::ToneReprCurve
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ToneReprCurve
impl core::panic::unwind_safe::UnwindSafe for moxcms::ToneReprCurve
impl<T, U> core::convert::Into<U> for moxcms::ToneReprCurve where U: core::convert::From<T>
pub fn moxcms::ToneReprCurve::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ToneReprCurve where U: core::convert::Into<T>
pub type moxcms::ToneReprCurve::Error = core::convert::Infallible
pub fn moxcms::ToneReprCurve::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ToneReprCurve where U: core::convert::TryFrom<T>
pub type moxcms::ToneReprCurve::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ToneReprCurve::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ToneReprCurve where T: core::clone::Clone
pub type moxcms::ToneReprCurve::Owned = T
pub fn moxcms::ToneReprCurve::clone_into(&self, target: &mut T)
pub fn moxcms::ToneReprCurve::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ToneReprCurve where T: 'static + ?core::marker::Sized
pub fn moxcms::ToneReprCurve::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ToneReprCurve where T: ?core::marker::Sized
pub fn moxcms::ToneReprCurve::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ToneReprCurve where T: ?core::marker::Sized
pub fn moxcms::ToneReprCurve::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ToneReprCurve where T: core::clone::Clone
pub unsafe fn moxcms::ToneReprCurve::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ToneReprCurve
pub fn moxcms::ToneReprCurve::from(t: T) -> T
pub enum moxcms::TransferCharacteristics
pub moxcms::TransferCharacteristics::Bt1361 = 12
pub moxcms::TransferCharacteristics::Bt202010bit = 14
pub moxcms::TransferCharacteristics::Bt202012bit = 15
pub moxcms::TransferCharacteristics::Bt470Bg = 5
pub moxcms::TransferCharacteristics::Bt470M = 4
pub moxcms::TransferCharacteristics::Bt601 = 6
pub moxcms::TransferCharacteristics::Bt709 = 1
pub moxcms::TransferCharacteristics::Hlg = 18
pub moxcms::TransferCharacteristics::Iec61966 = 11
pub moxcms::TransferCharacteristics::Linear = 8
pub moxcms::TransferCharacteristics::Log100 = 9
pub moxcms::TransferCharacteristics::Log100sqrt10 = 10
pub moxcms::TransferCharacteristics::Reserved
pub moxcms::TransferCharacteristics::Smpte2084 = 16
pub moxcms::TransferCharacteristics::Smpte240 = 7
pub moxcms::TransferCharacteristics::Smpte428 = 17
pub moxcms::TransferCharacteristics::Srgb = 13
pub moxcms::TransferCharacteristics::Unspecified = 2
impl moxcms::TransferCharacteristics
pub fn moxcms::TransferCharacteristics::gamma(self, v: f64) -> f64
pub fn moxcms::TransferCharacteristics::linearize(self, v: f64) -> f64
impl core::clone::Clone for moxcms::TransferCharacteristics
pub fn moxcms::TransferCharacteristics::clone(&self) -> moxcms::TransferCharacteristics
impl core::cmp::PartialEq for moxcms::TransferCharacteristics
pub fn moxcms::TransferCharacteristics::eq(&self, other: &moxcms::TransferCharacteristics) -> bool
impl core::convert::TryFrom<moxcms::TransferCharacteristics> for moxcms::ToneReprCurve
pub type moxcms::ToneReprCurve::Error = moxcms::CmsError
pub fn moxcms::ToneReprCurve::try_from(value: moxcms::TransferCharacteristics) -> core::result::Result<Self, Self::Error>
impl core::convert::TryFrom<u8> for moxcms::TransferCharacteristics
pub type moxcms::TransferCharacteristics::Error = moxcms::CmsError
pub fn moxcms::TransferCharacteristics::try_from(value: u8) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::TransferCharacteristics
pub fn moxcms::TransferCharacteristics::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::TransferCharacteristics
impl core::marker::StructuralPartialEq for moxcms::TransferCharacteristics
impl core::marker::Freeze for moxcms::TransferCharacteristics
impl core::marker::Send for moxcms::TransferCharacteristics
impl core::marker::Sync for moxcms::TransferCharacteristics
impl core::marker::Unpin for moxcms::TransferCharacteristics
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::TransferCharacteristics
impl core::panic::unwind_safe::UnwindSafe for moxcms::TransferCharacteristics
impl<T, U> core::convert::Into<U> for moxcms::TransferCharacteristics where U: core::convert::From<T>
pub fn moxcms::TransferCharacteristics::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::TransferCharacteristics where U: core::convert::Into<T>
pub type moxcms::TransferCharacteristics::Error = core::convert::Infallible
pub fn moxcms::TransferCharacteristics::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::TransferCharacteristics where U: core::convert::TryFrom<T>
pub type moxcms::TransferCharacteristics::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::TransferCharacteristics::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::TransferCharacteristics where T: core::clone::Clone
pub type moxcms::TransferCharacteristics::Owned = T
pub fn moxcms::TransferCharacteristics::clone_into(&self, target: &mut T)
pub fn moxcms::TransferCharacteristics::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::TransferCharacteristics where T: 'static + ?core::marker::Sized
pub fn moxcms::TransferCharacteristics::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::TransferCharacteristics where T: ?core::marker::Sized
pub fn moxcms::TransferCharacteristics::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::TransferCharacteristics where T: ?core::marker::Sized
pub fn moxcms::TransferCharacteristics::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::TransferCharacteristics where T: core::clone::Clone
pub unsafe fn moxcms::TransferCharacteristics::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::TransferCharacteristics
pub fn moxcms::TransferCharacteristics::from(t: T) -> T
#[repr(C)] pub struct moxcms::Chromaticity
pub moxcms::Chromaticity::x: f32
pub moxcms::Chromaticity::y: f32
impl moxcms::Chromaticity
pub const moxcms::Chromaticity::D50: moxcms::Chromaticity
pub const moxcms::Chromaticity::D65: moxcms::Chromaticity
pub const fn moxcms::Chromaticity::new(x: f32, y: f32) -> Self
pub const fn moxcms::Chromaticity::to_xyyb(&self) -> moxcms::XyY
pub const fn moxcms::Chromaticity::to_xyz(&self) -> moxcms::Xyz
pub const fn moxcms::Chromaticity::to_xyzd(&self) -> moxcms::Xyzd
impl core::clone::Clone for moxcms::Chromaticity
pub fn moxcms::Chromaticity::clone(&self) -> moxcms::Chromaticity
impl core::convert::TryFrom<moxcms::Xyz> for moxcms::Chromaticity
pub type moxcms::Chromaticity::Error = moxcms::CmsError
pub fn moxcms::Chromaticity::try_from(xyz: moxcms::Xyz) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::Chromaticity
pub fn moxcms::Chromaticity::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Chromaticity
impl core::marker::Freeze for moxcms::Chromaticity
impl core::marker::Send for moxcms::Chromaticity
impl core::marker::Sync for moxcms::Chromaticity
impl core::marker::Unpin for moxcms::Chromaticity
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Chromaticity
impl core::panic::unwind_safe::UnwindSafe for moxcms::Chromaticity
impl<T, U> core::convert::Into<U> for moxcms::Chromaticity where U: core::convert::From<T>
pub fn moxcms::Chromaticity::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Chromaticity where U: core::convert::Into<T>
pub type moxcms::Chromaticity::Error = core::convert::Infallible
pub fn moxcms::Chromaticity::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Chromaticity where U: core::convert::TryFrom<T>
pub type moxcms::Chromaticity::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Chromaticity::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Chromaticity where T: core::clone::Clone
pub type moxcms::Chromaticity::Owned = T
pub fn moxcms::Chromaticity::clone_into(&self, target: &mut T)
pub fn moxcms::Chromaticity::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Chromaticity where T: 'static + ?core::marker::Sized
pub fn moxcms::Chromaticity::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Chromaticity where T: ?core::marker::Sized
pub fn moxcms::Chromaticity::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Chromaticity where T: ?core::marker::Sized
pub fn moxcms::Chromaticity::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Chromaticity where T: core::clone::Clone
pub unsafe fn moxcms::Chromaticity::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Chromaticity
pub fn moxcms::Chromaticity::from(t: T) -> T
#[repr(C)] pub struct moxcms::CicpProfile
pub moxcms::CicpProfile::color_primaries: moxcms::CicpColorPrimaries
pub moxcms::CicpProfile::full_range: bool
pub moxcms::CicpProfile::matrix_coefficients: moxcms::MatrixCoefficients
pub moxcms::CicpProfile::transfer_characteristics: moxcms::TransferCharacteristics
impl core::clone::Clone for moxcms::CicpProfile
pub fn moxcms::CicpProfile::clone(&self) -> moxcms::CicpProfile
impl core::fmt::Debug for moxcms::CicpProfile
pub fn moxcms::CicpProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::CicpProfile
impl core::marker::Freeze for moxcms::CicpProfile
impl core::marker::Send for moxcms::CicpProfile
impl core::marker::Sync for moxcms::CicpProfile
impl core::marker::Unpin for moxcms::CicpProfile
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::CicpProfile
impl core::panic::unwind_safe::UnwindSafe for moxcms::CicpProfile
impl<T, U> core::convert::Into<U> for moxcms::CicpProfile where U: core::convert::From<T>
pub fn moxcms::CicpProfile::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::CicpProfile where U: core::convert::Into<T>
pub type moxcms::CicpProfile::Error = core::convert::Infallible
pub fn moxcms::CicpProfile::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::CicpProfile where U: core::convert::TryFrom<T>
pub type moxcms::CicpProfile::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::CicpProfile::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::CicpProfile where T: core::clone::Clone
pub type moxcms::CicpProfile::Owned = T
pub fn moxcms::CicpProfile::clone_into(&self, target: &mut T)
pub fn moxcms::CicpProfile::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::CicpProfile where T: 'static + ?core::marker::Sized
pub fn moxcms::CicpProfile::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::CicpProfile where T: ?core::marker::Sized
pub fn moxcms::CicpProfile::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::CicpProfile where T: ?core::marker::Sized
pub fn moxcms::CicpProfile::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::CicpProfile where T: core::clone::Clone
pub unsafe fn moxcms::CicpProfile::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::CicpProfile
pub fn moxcms::CicpProfile::from(t: T) -> T
#[repr(C)] pub struct moxcms::ColorDateTime
pub moxcms::ColorDateTime::day_of_the_month: u16
pub moxcms::ColorDateTime::hours: u16
pub moxcms::ColorDateTime::minutes: u16
pub moxcms::ColorDateTime::month: u16
pub moxcms::ColorDateTime::seconds: u16
pub moxcms::ColorDateTime::year: u16
impl moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::new_from_slice(slice: &[u8]) -> core::result::Result<moxcms::ColorDateTime, moxcms::CmsError>
pub fn moxcms::ColorDateTime::now() -> Self
impl core::clone::Clone for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::clone(&self) -> moxcms::ColorDateTime
impl core::cmp::Eq for moxcms::ColorDateTime
impl core::cmp::Ord for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::cmp(&self, other: &moxcms::ColorDateTime) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::eq(&self, other: &moxcms::ColorDateTime) -> bool
impl core::cmp::PartialOrd for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::partial_cmp(&self, other: &moxcms::ColorDateTime) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::default() -> moxcms::ColorDateTime
impl core::fmt::Debug for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ColorDateTime
impl core::marker::StructuralPartialEq for moxcms::ColorDateTime
impl core::marker::Freeze for moxcms::ColorDateTime
impl core::marker::Send for moxcms::ColorDateTime
impl core::marker::Sync for moxcms::ColorDateTime
impl core::marker::Unpin for moxcms::ColorDateTime
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ColorDateTime
impl core::panic::unwind_safe::UnwindSafe for moxcms::ColorDateTime
impl<T, U> core::convert::Into<U> for moxcms::ColorDateTime where U: core::convert::From<T>
pub fn moxcms::ColorDateTime::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ColorDateTime where U: core::convert::Into<T>
pub type moxcms::ColorDateTime::Error = core::convert::Infallible
pub fn moxcms::ColorDateTime::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ColorDateTime where U: core::convert::TryFrom<T>
pub type moxcms::ColorDateTime::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ColorDateTime::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ColorDateTime where T: core::clone::Clone
pub type moxcms::ColorDateTime::Owned = T
pub fn moxcms::ColorDateTime::clone_into(&self, target: &mut T)
pub fn moxcms::ColorDateTime::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ColorDateTime where T: 'static + ?core::marker::Sized
pub fn moxcms::ColorDateTime::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ColorDateTime where T: ?core::marker::Sized
pub fn moxcms::ColorDateTime::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ColorDateTime where T: ?core::marker::Sized
pub fn moxcms::ColorDateTime::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ColorDateTime where T: core::clone::Clone
pub unsafe fn moxcms::ColorDateTime::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ColorDateTime
pub fn moxcms::ColorDateTime::from(t: T) -> T
#[repr(C)] pub struct moxcms::ColorPrimaries
pub moxcms::ColorPrimaries::blue: moxcms::Chromaticity
pub moxcms::ColorPrimaries::green: moxcms::Chromaticity
pub moxcms::ColorPrimaries::red: moxcms::Chromaticity
impl moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::ACES_2065_1: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::ACES_CG: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::ADOBE_RGB: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::BT_2020: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::BT_470BG: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::BT_470M: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::BT_601: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::BT_709: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::DCI_P3: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::DISPLAY_P3: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::EBU_3213: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::GENERIC_FILM: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::PRO_PHOTO_RGB: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::SMPTE_240: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::SMPTE_431: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::SMPTE_432: moxcms::ColorPrimaries
pub const moxcms::ColorPrimaries::XYZ: moxcms::ColorPrimaries
impl core::clone::Clone for moxcms::ColorPrimaries
pub fn moxcms::ColorPrimaries::clone(&self) -> moxcms::ColorPrimaries
impl core::convert::TryFrom<moxcms::CicpColorPrimaries> for moxcms::ColorPrimaries
pub type moxcms::ColorPrimaries::Error = moxcms::CmsError
pub fn moxcms::ColorPrimaries::try_from(value: moxcms::CicpColorPrimaries) -> core::result::Result<Self, Self::Error>
impl core::fmt::Debug for moxcms::ColorPrimaries
pub fn moxcms::ColorPrimaries::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ColorPrimaries
impl core::marker::Freeze for moxcms::ColorPrimaries
impl core::marker::Send for moxcms::ColorPrimaries
impl core::marker::Sync for moxcms::ColorPrimaries
impl core::marker::Unpin for moxcms::ColorPrimaries
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ColorPrimaries
impl core::panic::unwind_safe::UnwindSafe for moxcms::ColorPrimaries
impl<T, U> core::convert::Into<U> for moxcms::ColorPrimaries where U: core::convert::From<T>
pub fn moxcms::ColorPrimaries::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ColorPrimaries where U: core::convert::Into<T>
pub type moxcms::ColorPrimaries::Error = core::convert::Infallible
pub fn moxcms::ColorPrimaries::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ColorPrimaries where U: core::convert::TryFrom<T>
pub type moxcms::ColorPrimaries::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ColorPrimaries::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ColorPrimaries where T: core::clone::Clone
pub type moxcms::ColorPrimaries::Owned = T
pub fn moxcms::ColorPrimaries::clone_into(&self, target: &mut T)
pub fn moxcms::ColorPrimaries::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ColorPrimaries where T: 'static + ?core::marker::Sized
pub fn moxcms::ColorPrimaries::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ColorPrimaries where T: ?core::marker::Sized
pub fn moxcms::ColorPrimaries::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ColorPrimaries where T: ?core::marker::Sized
pub fn moxcms::ColorPrimaries::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ColorPrimaries where T: core::clone::Clone
pub unsafe fn moxcms::ColorPrimaries::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ColorPrimaries
pub fn moxcms::ColorPrimaries::from(t: T) -> T
#[repr(C)] pub struct moxcms::ColorProfile
pub moxcms::ColorProfile::black_point: core::option::Option<moxcms::Xyzd>
pub moxcms::ColorProfile::blue_colorant: moxcms::Xyzd
pub moxcms::ColorProfile::blue_trc: core::option::Option<moxcms::ToneReprCurve>
pub moxcms::ColorProfile::calibration_date: core::option::Option<moxcms::ColorDateTime>
pub moxcms::ColorProfile::char_target: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::chromatic_adaptation: core::option::Option<moxcms::Matrix3d>
pub moxcms::ColorProfile::cicp: core::option::Option<moxcms::CicpProfile>
pub moxcms::ColorProfile::color_space: moxcms::DataColorSpace
pub moxcms::ColorProfile::copyright: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::description: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::device_manufacturer: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::device_model: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::gamut: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::gray_trc: core::option::Option<moxcms::ToneReprCurve>
pub moxcms::ColorProfile::green_colorant: moxcms::Xyzd
pub moxcms::ColorProfile::green_trc: core::option::Option<moxcms::ToneReprCurve>
pub moxcms::ColorProfile::luminance: core::option::Option<moxcms::Xyzd>
pub moxcms::ColorProfile::lut_a_to_b_colorimetric: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::lut_a_to_b_perceptual: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::lut_a_to_b_saturation: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::lut_b_to_a_colorimetric: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::lut_b_to_a_perceptual: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::lut_b_to_a_saturation: core::option::Option<moxcms::LutWarehouse>
pub moxcms::ColorProfile::measurement: core::option::Option<moxcms::Measurement>
pub moxcms::ColorProfile::media_white_point: core::option::Option<moxcms::Xyzd>
pub moxcms::ColorProfile::pcs: moxcms::DataColorSpace
pub moxcms::ColorProfile::profile_class: moxcms::ProfileClass
pub moxcms::ColorProfile::red_colorant: moxcms::Xyzd
pub moxcms::ColorProfile::red_trc: core::option::Option<moxcms::ToneReprCurve>
pub moxcms::ColorProfile::rendering_intent: moxcms::RenderingIntent
pub moxcms::ColorProfile::technology: core::option::Option<moxcms::TechnologySignatures>
pub moxcms::ColorProfile::viewing_conditions: core::option::Option<moxcms::ViewingConditions>
pub moxcms::ColorProfile::viewing_conditions_description: core::option::Option<moxcms::ProfileText>
pub moxcms::ColorProfile::white_point: moxcms::Xyzd
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::build_10bit_gamma_table(&self, trc: &core::option::Option<moxcms::ToneReprCurve>, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[u16; 65536]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_12bit_gamma_table(&self, trc: &core::option::Option<moxcms::ToneReprCurve>, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[u16; 65536]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_16bit_gamma_table(&self, trc: &core::option::Option<moxcms::ToneReprCurve>, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[u16; 65536]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_8bit_gamma_table(&self, trc: &core::option::Option<moxcms::ToneReprCurve>, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[u16; 65536]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_8bit_lin_table(&self, trc: &core::option::Option<moxcms::ToneReprCurve>) -> core::result::Result<alloc::boxed::Box<[f32; 256]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_b_linearize_table<T: PointeeSizeExpressible, const N: usize, const BIT_DEPTH: usize>(&self, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[f32; N]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_g_linearize_table<T: PointeeSizeExpressible, const N: usize, const BIT_DEPTH: usize>(&self, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[f32; N]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_gamma_table<T: core::default::Default + core::marker::Copy + 'static + PointeeSizeExpressible + GammaLutInterpolate, const BUCKET: usize, const N: usize, const BIT_DEPTH: usize>(&self, trc: &core::option::Option<moxcms::ToneReprCurve>, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[T; BUCKET]>, moxcms::CmsError> where f32: num_traits::cast::AsPrimitive<T>, u32: num_traits::cast::AsPrimitive<T>
pub fn moxcms::ColorProfile::build_gray_linearize_table<T: PointeeSizeExpressible, const N: usize, const BIT_DEPTH: usize>(&self) -> core::result::Result<alloc::boxed::Box<[f32; N]>, moxcms::CmsError>
pub fn moxcms::ColorProfile::build_r_linearize_table<T: PointeeSizeExpressible, const N: usize, const BIT_DEPTH: usize>(&self, use_cicp: bool) -> core::result::Result<alloc::boxed::Box<[f32; N]>, moxcms::CmsError>
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::colorant_matrix(&self) -> moxcms::Matrix3d
pub const fn moxcms::ColorProfile::colorants_matrix(white_point: moxcms::XyY, primaries: moxcms::ColorPrimaries) -> moxcms::Matrix3d
pub fn moxcms::ColorProfile::profile_volume(&self) -> core::option::Option<f32>
pub const fn moxcms::ColorProfile::rgb_to_xyz(&self, xyz_matrix: moxcms::Matrix3f, wp: moxcms::Xyz) -> moxcms::Matrix3f
pub const fn moxcms::ColorProfile::rgb_to_xyz_d(xyz_matrix: moxcms::Matrix3d, wp: moxcms::Xyzd) -> moxcms::Matrix3d
pub fn moxcms::ColorProfile::rgb_to_xyz_matrix(&self) -> moxcms::Matrix3d
pub fn moxcms::ColorProfile::transform_matrix(&self, dest: &moxcms::ColorProfile) -> moxcms::Matrix3d
pub const fn moxcms::ColorProfile::update_rgb_colorimetry(&mut self, white_point: moxcms::XyY, primaries: moxcms::ColorPrimaries)
pub fn moxcms::ColorProfile::update_rgb_colorimetry_from_cicp(&mut self, cicp: moxcms::CicpProfile) -> bool
pub const fn moxcms::ColorProfile::update_rgb_colorimetry_triplet(&mut self, white_point: moxcms::XyY, red_xyz: moxcms::Xyzd, green_xyz: moxcms::Xyzd, blue_xyz: moxcms::Xyzd)
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::create_transform_10bit(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::Transform16BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::create_transform_12bit(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::Transform16BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::create_transform_16bit(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::Transform16BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::create_transform_8bit(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::Transform8BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::create_transform_f32(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::TransformF32BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::create_transform_f64(&self, src_layout: moxcms::Layout, dst_pr: &moxcms::ColorProfile, dst_layout: moxcms::Layout, options: moxcms::TransformOptions) -> core::result::Result<alloc::boxed::Box<moxcms::TransformF64BitExecutor>, moxcms::CmsError>
pub fn moxcms::ColorProfile::is_matrix_shaper(&self) -> bool
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::encode(&self) -> core::result::Result<alloc::vec::Vec<u8>, moxcms::CmsError>
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_aces_aces_2065_1_linear() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_aces_cg_linear() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_adobe_rgb() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_bt2020() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_bt2020_hlg() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_bt2020_pq() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_dci_p3() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_display_p3() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_display_p3_pq() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_gray_with_gamma(gamma: f32) -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_pro_photo_rgb() -> moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_srgb() -> moxcms::ColorProfile
impl moxcms::ColorProfile
pub fn moxcms::ColorProfile::new_from_slice(slice: &[u8]) -> core::result::Result<Self, moxcms::CmsError>
pub fn moxcms::ColorProfile::version(&self) -> moxcms::ProfileVersion
impl core::clone::Clone for moxcms::ColorProfile
pub fn moxcms::ColorProfile::clone(&self) -> moxcms::ColorProfile
impl core::default::Default for moxcms::ColorProfile
pub fn moxcms::ColorProfile::default() -> moxcms::ColorProfile
impl core::fmt::Debug for moxcms::ColorProfile
pub fn moxcms::ColorProfile::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::ColorProfile
impl core::marker::Send for moxcms::ColorProfile
impl core::marker::Sync for moxcms::ColorProfile
impl core::marker::Unpin for moxcms::ColorProfile
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ColorProfile
impl core::panic::unwind_safe::UnwindSafe for moxcms::ColorProfile
impl<T, U> core::convert::Into<U> for moxcms::ColorProfile where U: core::convert::From<T>
pub fn moxcms::ColorProfile::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ColorProfile where U: core::convert::Into<T>
pub type moxcms::ColorProfile::Error = core::convert::Infallible
pub fn moxcms::ColorProfile::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ColorProfile where U: core::convert::TryFrom<T>
pub type moxcms::ColorProfile::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ColorProfile::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ColorProfile where T: core::clone::Clone
pub type moxcms::ColorProfile::Owned = T
pub fn moxcms::ColorProfile::clone_into(&self, target: &mut T)
pub fn moxcms::ColorProfile::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ColorProfile where T: 'static + ?core::marker::Sized
pub fn moxcms::ColorProfile::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ColorProfile where T: ?core::marker::Sized
pub fn moxcms::ColorProfile::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ColorProfile where T: ?core::marker::Sized
pub fn moxcms::ColorProfile::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ColorProfile where T: core::clone::Clone
pub unsafe fn moxcms::ColorProfile::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ColorProfile
pub fn moxcms::ColorProfile::from(t: T) -> T
pub struct moxcms::Cube<'a>
impl moxcms::Cube<'_>
pub fn moxcms::Cube<'_>::new(array: &[f32], grid_size: usize) -> moxcms::Cube<'_>
pub fn moxcms::Cube<'_>::new_cube(array: &[f32], grid_size: [u8; 3]) -> moxcms::Cube<'_>
pub fn moxcms::Cube<'_>::trilinear_vec3(&self, lin_x: f32, lin_y: f32, lin_z: f32) -> moxcms::Vector3f
pub fn moxcms::Cube<'_>::trilinear_vec4(&self, lin_x: f32, lin_y: f32, lin_z: f32) -> moxcms::Vector4f
impl<'a> core::marker::Freeze for moxcms::Cube<'a>
impl<'a> core::marker::Send for moxcms::Cube<'a>
impl<'a> core::marker::Sync for moxcms::Cube<'a>
impl<'a> core::marker::Unpin for moxcms::Cube<'a>
impl<'a> core::panic::unwind_safe::RefUnwindSafe for moxcms::Cube<'a>
impl<'a> core::panic::unwind_safe::UnwindSafe for moxcms::Cube<'a>
impl<T, U> core::convert::Into<U> for moxcms::Cube<'a> where U: core::convert::From<T>
pub fn moxcms::Cube<'a>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Cube<'a> where U: core::convert::Into<T>
pub type moxcms::Cube<'a>::Error = core::convert::Infallible
pub fn moxcms::Cube<'a>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Cube<'a> where U: core::convert::TryFrom<T>
pub type moxcms::Cube<'a>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Cube<'a>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> core::any::Any for moxcms::Cube<'a> where T: 'static + ?core::marker::Sized
pub fn moxcms::Cube<'a>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Cube<'a> where T: ?core::marker::Sized
pub fn moxcms::Cube<'a>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Cube<'a> where T: ?core::marker::Sized
pub fn moxcms::Cube<'a>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for moxcms::Cube<'a>
pub fn moxcms::Cube<'a>::from(t: T) -> T
pub struct moxcms::DescriptionString
pub moxcms::DescriptionString::ascii_string: alloc::string::String
pub moxcms::DescriptionString::mac_string: alloc::string::String
pub moxcms::DescriptionString::script_code_code: i8
pub moxcms::DescriptionString::unicode_language_code: u32
pub moxcms::DescriptionString::unicode_string: alloc::string::String
impl core::clone::Clone for moxcms::DescriptionString
pub fn moxcms::DescriptionString::clone(&self) -> moxcms::DescriptionString
impl core::fmt::Debug for moxcms::DescriptionString
pub fn moxcms::DescriptionString::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::DescriptionString
impl core::marker::Send for moxcms::DescriptionString
impl core::marker::Sync for moxcms::DescriptionString
impl core::marker::Unpin for moxcms::DescriptionString
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::DescriptionString
impl core::panic::unwind_safe::UnwindSafe for moxcms::DescriptionString
impl<T, U> core::convert::Into<U> for moxcms::DescriptionString where U: core::convert::From<T>
pub fn moxcms::DescriptionString::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::DescriptionString where U: core::convert::Into<T>
pub type moxcms::DescriptionString::Error = core::convert::Infallible
pub fn moxcms::DescriptionString::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::DescriptionString where U: core::convert::TryFrom<T>
pub type moxcms::DescriptionString::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::DescriptionString::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::DescriptionString where T: core::clone::Clone
pub type moxcms::DescriptionString::Owned = T
pub fn moxcms::DescriptionString::clone_into(&self, target: &mut T)
pub fn moxcms::DescriptionString::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::DescriptionString where T: 'static + ?core::marker::Sized
pub fn moxcms::DescriptionString::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::DescriptionString where T: ?core::marker::Sized
pub fn moxcms::DescriptionString::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::DescriptionString where T: ?core::marker::Sized
pub fn moxcms::DescriptionString::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::DescriptionString where T: core::clone::Clone
pub unsafe fn moxcms::DescriptionString::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::DescriptionString
pub fn moxcms::DescriptionString::from(t: T) -> T
pub struct moxcms::Float106
pub moxcms::Float106::v0: f64
pub moxcms::Float106::v1: f64
impl moxcms::Float106
pub const fn moxcms::Float106::abs(self) -> Self
pub const fn moxcms::Float106::c_add_f64(self, rhs: f64) -> Self
pub const fn moxcms::Float106::c_div(self, rhs: moxcms::Float106) -> Self
pub const fn moxcms::Float106::c_mul(self, other: moxcms::Float106) -> Self
pub const fn moxcms::Float106::c_mul_f64(self, rhs: f64) -> Self
pub const fn moxcms::Float106::c_sqr(self) -> Self
pub const fn moxcms::Float106::c_sub_f64(self, rhs: f64) -> Self
pub fn moxcms::Float106::fast_mul_f64(self, rhs: f64) -> Self
pub const fn moxcms::Float106::from_f64(v: f64) -> moxcms::Float106
pub fn moxcms::Float106::mul_as_f64(self, other: Self) -> f64
pub const fn moxcms::Float106::new(v0: f64, v1: f64) -> Self
pub fn moxcms::Float106::recip(self) -> moxcms::Float106
pub fn moxcms::Float106::sqr(self) -> Self
pub const fn moxcms::Float106::to_f64(self) -> f64
impl moxcms::Float106
pub const fn moxcms::Float106::c_from_mul_product(v0: f64, v1: f64) -> Self
pub fn moxcms::Float106::from_exact_add(a: f64, b: f64) -> Self
pub fn moxcms::Float106::from_mul_product(v0: f64, v1: f64) -> Self
impl moxcms::Float106
pub fn moxcms::Float106::normalize(self) -> moxcms::Float106
impl core::clone::Clone for moxcms::Float106
pub fn moxcms::Float106::clone(&self) -> moxcms::Float106
impl core::default::Default for moxcms::Float106
pub fn moxcms::Float106::default() -> moxcms::Float106
impl core::fmt::Debug for moxcms::Float106
pub fn moxcms::Float106::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Float106
impl core::ops::arith::Add for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::add(self, rhs: moxcms::Float106) -> Self::Output
impl core::ops::arith::Add<f64> for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::add(self, rhs: f64) -> Self::Output
impl core::ops::arith::Add<moxcms::Float106> for f64
pub type f64::Output = moxcms::Float106
pub fn f64::add(self, rhs: moxcms::Float106) -> Self::Output
impl core::ops::arith::Div for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::div(self, rhs: moxcms::Float106) -> Self::Output
impl core::ops::arith::Mul for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::mul(self, other: moxcms::Float106) -> Self::Output
impl core::ops::arith::Mul<f64> for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::mul(self, rhs: f64) -> Self::Output
impl core::ops::arith::Mul<moxcms::Float106> for f64
pub type f64::Output = moxcms::Float106
pub fn f64::mul(self, rhs: moxcms::Float106) -> Self::Output
impl core::ops::arith::Neg for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::neg(self) -> Self::Output
impl core::ops::arith::Sub<f64> for moxcms::Float106
pub type moxcms::Float106::Output = moxcms::Float106
pub fn moxcms::Float106::sub(self, rhs: f64) -> Self::Output
impl core::marker::Freeze for moxcms::Float106
impl core::marker::Send for moxcms::Float106
impl core::marker::Sync for moxcms::Float106
impl core::marker::Unpin for moxcms::Float106
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Float106
impl core::panic::unwind_safe::UnwindSafe for moxcms::Float106
impl<T, U> core::convert::Into<U> for moxcms::Float106 where U: core::convert::From<T>
pub fn moxcms::Float106::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Float106 where U: core::convert::Into<T>
pub type moxcms::Float106::Error = core::convert::Infallible
pub fn moxcms::Float106::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Float106 where U: core::convert::TryFrom<T>
pub type moxcms::Float106::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Float106::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Float106 where T: core::clone::Clone
pub type moxcms::Float106::Owned = T
pub fn moxcms::Float106::clone_into(&self, target: &mut T)
pub fn moxcms::Float106::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Float106 where T: 'static + ?core::marker::Sized
pub fn moxcms::Float106::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Float106 where T: ?core::marker::Sized
pub fn moxcms::Float106::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Float106 where T: ?core::marker::Sized
pub fn moxcms::Float106::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Float106 where T: core::clone::Clone
pub unsafe fn moxcms::Float106::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Float106
pub fn moxcms::Float106::from(t: T) -> T
pub struct moxcms::Float48
pub moxcms::Float48::v0: f32
pub moxcms::Float48::v1: f32
impl moxcms::Float48
pub const fn moxcms::Float48::abs(self) -> Self
pub const fn moxcms::Float48::c_add(self, rhs: Self) -> Self
pub const fn moxcms::Float48::c_mul(self, rhs: Self) -> Self
pub const fn moxcms::Float48::c_recip(self) -> moxcms::Float48
pub fn moxcms::Float48::fast_mul_f32(self, rhs: f32) -> Self
pub const fn moxcms::Float48::from_f32(v: f32) -> moxcms::Float48
pub fn moxcms::Float48::mul_as_f32(self, other: Self) -> f32
pub const fn moxcms::Float48::new(v0: f32, v1: f32) -> Self
pub fn moxcms::Float48::sqr(self) -> Self
pub const fn moxcms::Float48::to_f32(self) -> f32
pub const fn moxcms::Float48::to_f64(self) -> f64
impl moxcms::Float48
pub const fn moxcms::Float48::c_from_mul_product(v0: f32, v1: f32) -> Self
pub fn moxcms::Float48::from_mul_product(v0: f32, v1: f32) -> Self
impl moxcms::Float48
pub fn moxcms::Float48::normalize(self) -> moxcms::Float48
impl core::clone::Clone for moxcms::Float48
pub fn moxcms::Float48::clone(&self) -> moxcms::Float48
impl core::default::Default for moxcms::Float48
pub fn moxcms::Float48::default() -> moxcms::Float48
impl core::fmt::Debug for moxcms::Float48
pub fn moxcms::Float48::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Float48
impl core::ops::arith::Add for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::add(self, rhs: moxcms::Float48) -> Self::Output
impl core::ops::arith::Add<f32> for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::add(self, rhs: f32) -> Self::Output
impl core::ops::arith::Add<moxcms::Float48> for f32
pub type f32::Output = moxcms::Float48
pub fn f32::add(self, rhs: moxcms::Float48) -> Self::Output
impl core::ops::arith::Div for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::div(self, rhs: moxcms::Float48) -> Self::Output
impl core::ops::arith::Mul for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::mul(self, other: moxcms::Float48) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::Mul<moxcms::Float48> for f32
pub type f32::Output = moxcms::Float48
pub fn f32::mul(self, rhs: moxcms::Float48) -> Self::Output
impl core::ops::arith::Neg for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::neg(self) -> Self::Output
impl core::ops::arith::Sub<f32> for moxcms::Float48
pub type moxcms::Float48::Output = moxcms::Float48
pub fn moxcms::Float48::sub(self, rhs: f32) -> Self::Output
impl core::marker::Freeze for moxcms::Float48
impl core::marker::Send for moxcms::Float48
impl core::marker::Sync for moxcms::Float48
impl core::marker::Unpin for moxcms::Float48
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Float48
impl core::panic::unwind_safe::UnwindSafe for moxcms::Float48
impl<T, U> core::convert::Into<U> for moxcms::Float48 where U: core::convert::From<T>
pub fn moxcms::Float48::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Float48 where U: core::convert::Into<T>
pub type moxcms::Float48::Error = core::convert::Infallible
pub fn moxcms::Float48::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Float48 where U: core::convert::TryFrom<T>
pub type moxcms::Float48::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Float48::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Float48 where T: core::clone::Clone
pub type moxcms::Float48::Owned = T
pub fn moxcms::Float48::clone_into(&self, target: &mut T)
pub fn moxcms::Float48::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Float48 where T: 'static + ?core::marker::Sized
pub fn moxcms::Float48::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Float48 where T: ?core::marker::Sized
pub fn moxcms::Float48::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Float48 where T: ?core::marker::Sized
pub fn moxcms::Float48::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Float48 where T: core::clone::Clone
pub unsafe fn moxcms::Float48::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Float48
pub fn moxcms::Float48::from(t: T) -> T
pub struct moxcms::Hypercube<'a>
impl moxcms::Hypercube<'_>
pub fn moxcms::Hypercube<'_>::new(array: &[f32], grid_size: usize) -> moxcms::Hypercube<'_>
pub fn moxcms::Hypercube<'_>::new_hypercube(array: &[f32], grid_size: [u8; 4]) -> moxcms::Hypercube<'_>
impl moxcms::Hypercube<'_>
pub fn moxcms::Hypercube<'_>::quadlinear_vec3(&self, lin_x: f32, lin_y: f32, lin_z: f32, lin_w: f32) -> moxcms::Vector3f
pub fn moxcms::Hypercube<'_>::quadlinear_vec4(&self, lin_x: f32, lin_y: f32, lin_z: f32, lin_w: f32) -> moxcms::Vector4f
impl<'a> core::marker::Freeze for moxcms::Hypercube<'a>
impl<'a> core::marker::Send for moxcms::Hypercube<'a>
impl<'a> core::marker::Sync for moxcms::Hypercube<'a>
impl<'a> core::marker::Unpin for moxcms::Hypercube<'a>
impl<'a> core::panic::unwind_safe::RefUnwindSafe for moxcms::Hypercube<'a>
impl<'a> core::panic::unwind_safe::UnwindSafe for moxcms::Hypercube<'a>
impl<T, U> core::convert::Into<U> for moxcms::Hypercube<'a> where U: core::convert::From<T>
pub fn moxcms::Hypercube<'a>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Hypercube<'a> where U: core::convert::Into<T>
pub type moxcms::Hypercube<'a>::Error = core::convert::Infallible
pub fn moxcms::Hypercube<'a>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Hypercube<'a> where U: core::convert::TryFrom<T>
pub type moxcms::Hypercube<'a>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Hypercube<'a>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> core::any::Any for moxcms::Hypercube<'a> where T: 'static + ?core::marker::Sized
pub fn moxcms::Hypercube<'a>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Hypercube<'a> where T: ?core::marker::Sized
pub fn moxcms::Hypercube<'a>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Hypercube<'a> where T: ?core::marker::Sized
pub fn moxcms::Hypercube<'a>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for moxcms::Hypercube<'a>
pub fn moxcms::Hypercube<'a>::from(t: T) -> T
pub struct moxcms::ICtCp
pub moxcms::ICtCp::cp: f32
pub moxcms::ICtCp::ct: f32
pub moxcms::ICtCp::i: f32
impl moxcms::ICtCp
pub fn moxcms::ICtCp::from_linear_rgb(rgb: moxcms::Rgb<f32>, matrix: moxcms::Matrix3f) -> moxcms::ICtCp
pub fn moxcms::ICtCp::from_xyz(xyz: moxcms::Xyz) -> moxcms::ICtCp
pub const fn moxcms::ICtCp::new(i: f32, ct: f32, cp: f32) -> moxcms::ICtCp
pub const fn moxcms::ICtCp::prepare_to_lms(rgb_to_xyz: moxcms::Matrix3f) -> moxcms::Matrix3f
pub fn moxcms::ICtCp::to_linear_rgb(&self, matrix: moxcms::Matrix3f) -> moxcms::Rgb<f32>
pub fn moxcms::ICtCp::to_xyz(&self) -> moxcms::Xyz
impl core::clone::Clone for moxcms::ICtCp
pub fn moxcms::ICtCp::clone(&self) -> moxcms::ICtCp
impl core::cmp::PartialEq for moxcms::ICtCp
pub fn moxcms::ICtCp::eq(&self, other: &moxcms::ICtCp) -> bool
impl core::cmp::PartialOrd for moxcms::ICtCp
pub fn moxcms::ICtCp::partial_cmp(&self, other: &moxcms::ICtCp) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::ICtCp
pub fn moxcms::ICtCp::default() -> moxcms::ICtCp
impl core::marker::Copy for moxcms::ICtCp
impl core::marker::StructuralPartialEq for moxcms::ICtCp
impl core::marker::Freeze for moxcms::ICtCp
impl core::marker::Send for moxcms::ICtCp
impl core::marker::Sync for moxcms::ICtCp
impl core::marker::Unpin for moxcms::ICtCp
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ICtCp
impl core::panic::unwind_safe::UnwindSafe for moxcms::ICtCp
impl<T, U> core::convert::Into<U> for moxcms::ICtCp where U: core::convert::From<T>
pub fn moxcms::ICtCp::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ICtCp where U: core::convert::Into<T>
pub type moxcms::ICtCp::Error = core::convert::Infallible
pub fn moxcms::ICtCp::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ICtCp where U: core::convert::TryFrom<T>
pub type moxcms::ICtCp::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ICtCp::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ICtCp where T: core::clone::Clone
pub type moxcms::ICtCp::Owned = T
pub fn moxcms::ICtCp::clone_into(&self, target: &mut T)
pub fn moxcms::ICtCp::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ICtCp where T: 'static + ?core::marker::Sized
pub fn moxcms::ICtCp::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ICtCp where T: ?core::marker::Sized
pub fn moxcms::ICtCp::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ICtCp where T: ?core::marker::Sized
pub fn moxcms::ICtCp::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ICtCp where T: core::clone::Clone
pub unsafe fn moxcms::ICtCp::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ICtCp
pub fn moxcms::ICtCp::from(t: T) -> T
#[repr(C)] pub struct moxcms::Jzazbz
pub moxcms::Jzazbz::az: f32
pub moxcms::Jzazbz::bz: f32
pub moxcms::Jzazbz::jz: f32
impl moxcms::Jzazbz
pub fn moxcms::Jzazbz::cbrt(&self) -> moxcms::Jzazbz
pub fn moxcms::Jzazbz::sqrt(&self) -> moxcms::Jzazbz
impl moxcms::Jzazbz
pub fn moxcms::Jzazbz::euclidean_distance(&self, other: Self) -> f32
pub fn moxcms::Jzazbz::from_xyz(xyz: moxcms::Xyz) -> moxcms::Jzazbz
pub fn moxcms::Jzazbz::from_xyz_with_display_luminance(xyz: moxcms::Xyz, display_luminance: f32) -> moxcms::Jzazbz
pub fn moxcms::Jzazbz::new(jz: f32, az: f32, bz: f32) -> moxcms::Jzazbz
pub fn moxcms::Jzazbz::taxicab_distance(&self, other: Self) -> f32
pub fn moxcms::Jzazbz::to_jzczhz(&self) -> moxcms::Jzczhz
pub fn moxcms::Jzazbz::to_xyz(&self, display_luminance: f32) -> moxcms::Xyz
impl core::clone::Clone for moxcms::Jzazbz
pub fn moxcms::Jzazbz::clone(&self) -> moxcms::Jzazbz
impl core::cmp::PartialEq for moxcms::Jzazbz
pub fn moxcms::Jzazbz::eq(&self, other: &moxcms::Jzazbz) -> bool
impl core::cmp::PartialOrd for moxcms::Jzazbz
pub fn moxcms::Jzazbz::partial_cmp(&self, other: &moxcms::Jzazbz) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::Jzazbz
pub fn moxcms::Jzazbz::default() -> moxcms::Jzazbz
impl core::fmt::Debug for moxcms::Jzazbz
pub fn moxcms::Jzazbz::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Jzazbz
impl core::marker::StructuralPartialEq for moxcms::Jzazbz
impl core::ops::arith::Add for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::add(self, rhs: moxcms::Jzazbz) -> Self::Output
impl core::ops::arith::Add<f32> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::add(self, rhs: f32) -> Self::Output
impl core::ops::arith::AddAssign for moxcms::Jzazbz
pub fn moxcms::Jzazbz::add_assign(&mut self, rhs: moxcms::Jzazbz)
impl core::ops::arith::AddAssign<f32> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::div(self, rhs: moxcms::Jzazbz) -> Self::Output
impl core::ops::arith::Div<f32> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::Jzazbz
pub fn moxcms::Jzazbz::div_assign(&mut self, rhs: moxcms::Jzazbz)
impl core::ops::arith::DivAssign<f32> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::mul(self, rhs: moxcms::Jzazbz) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::Jzazbz
pub fn moxcms::Jzazbz::mul_assign(&mut self, rhs: moxcms::Jzazbz)
impl core::ops::arith::MulAssign<f32> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::sub(self, rhs: moxcms::Jzazbz) -> Self::Output
impl core::ops::arith::Sub<f32> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::Jzazbz
pub fn moxcms::Jzazbz::sub_assign(&mut self, rhs: moxcms::Jzazbz)
impl core::ops::arith::SubAssign<f32> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::sub_assign(&mut self, rhs: f32)
impl core::ops::index::Index<usize> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = f32
pub fn moxcms::Jzazbz::index(&self, index: usize) -> &f32
impl core::ops::index::IndexMut<usize> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::index_mut(&mut self, index: usize) -> &mut f32
impl num_traits::pow::Pow<f32> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::Jzazbz> for moxcms::Jzazbz
pub type moxcms::Jzazbz::Output = moxcms::Jzazbz
pub fn moxcms::Jzazbz::pow(self, rhs: moxcms::Jzazbz) -> Self::Output
impl core::marker::Freeze for moxcms::Jzazbz
impl core::marker::Send for moxcms::Jzazbz
impl core::marker::Sync for moxcms::Jzazbz
impl core::marker::Unpin for moxcms::Jzazbz
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Jzazbz
impl core::panic::unwind_safe::UnwindSafe for moxcms::Jzazbz
impl<T, U> core::convert::Into<U> for moxcms::Jzazbz where U: core::convert::From<T>
pub fn moxcms::Jzazbz::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Jzazbz where U: core::convert::Into<T>
pub type moxcms::Jzazbz::Error = core::convert::Infallible
pub fn moxcms::Jzazbz::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Jzazbz where U: core::convert::TryFrom<T>
pub type moxcms::Jzazbz::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Jzazbz::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Jzazbz where T: core::clone::Clone
pub type moxcms::Jzazbz::Owned = T
pub fn moxcms::Jzazbz::clone_into(&self, target: &mut T)
pub fn moxcms::Jzazbz::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Jzazbz where T: 'static + ?core::marker::Sized
pub fn moxcms::Jzazbz::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Jzazbz where T: ?core::marker::Sized
pub fn moxcms::Jzazbz::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Jzazbz where T: ?core::marker::Sized
pub fn moxcms::Jzazbz::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Jzazbz where T: core::clone::Clone
pub unsafe fn moxcms::Jzazbz::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Jzazbz
pub fn moxcms::Jzazbz::from(t: T) -> T
#[repr(C)] pub struct moxcms::Jzczhz
pub moxcms::Jzczhz::cz: f32
pub moxcms::Jzczhz::hz: f32
pub moxcms::Jzczhz::jz: f32
impl moxcms::Jzczhz
pub fn moxcms::Jzczhz::cbrt(&self) -> moxcms::Jzczhz
pub fn moxcms::Jzczhz::sqrt(&self) -> moxcms::Jzczhz
impl moxcms::Jzczhz
pub fn moxcms::Jzczhz::distance(&self, other: moxcms::Jzczhz) -> f32
pub fn moxcms::Jzczhz::euclidean_distance(&self, other: Self) -> f32
pub fn moxcms::Jzczhz::from_jzazbz(jzazbz: moxcms::Jzazbz) -> moxcms::Jzczhz
pub fn moxcms::Jzczhz::from_xyz(xyz: moxcms::Xyz) -> moxcms::Jzczhz
pub fn moxcms::Jzczhz::from_xyz_with_display_luminance(xyz: moxcms::Xyz, luminance: f32) -> moxcms::Jzczhz
pub fn moxcms::Jzczhz::new(jz: f32, cz: f32, hz: f32) -> moxcms::Jzczhz
pub fn moxcms::Jzczhz::taxicab_distance(&self, other: Self) -> f32
pub fn moxcms::Jzczhz::to_jzazbz(&self) -> moxcms::Jzazbz
pub fn moxcms::Jzczhz::to_jzazbz_with_luminance(&self) -> moxcms::Jzazbz
pub fn moxcms::Jzczhz::to_xyz(&self, display_luminance: f32) -> moxcms::Xyz
impl core::clone::Clone for moxcms::Jzczhz
pub fn moxcms::Jzczhz::clone(&self) -> moxcms::Jzczhz
impl core::cmp::PartialEq for moxcms::Jzczhz
pub fn moxcms::Jzczhz::eq(&self, other: &moxcms::Jzczhz) -> bool
impl core::cmp::PartialOrd for moxcms::Jzczhz
pub fn moxcms::Jzczhz::partial_cmp(&self, other: &moxcms::Jzczhz) -> core::option::Option<core::cmp::Ordering>
impl core::fmt::Debug for moxcms::Jzczhz
pub fn moxcms::Jzczhz::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Jzczhz
impl core::marker::StructuralPartialEq for moxcms::Jzczhz
impl core::ops::arith::Add for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::add(self, rhs: moxcms::Jzczhz) -> Self::Output
impl core::ops::arith::Add<f32> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::add(self, rhs: f32) -> Self::Output
impl core::ops::arith::AddAssign for moxcms::Jzczhz
pub fn moxcms::Jzczhz::add_assign(&mut self, rhs: moxcms::Jzczhz)
impl core::ops::arith::AddAssign<f32> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::div(self, rhs: moxcms::Jzczhz) -> Self::Output
impl core::ops::arith::Div<f32> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::Jzczhz
pub fn moxcms::Jzczhz::div_assign(&mut self, rhs: moxcms::Jzczhz)
impl core::ops::arith::DivAssign<f32> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::mul(self, rhs: moxcms::Jzczhz) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::Jzczhz
pub fn moxcms::Jzczhz::mul_assign(&mut self, rhs: moxcms::Jzczhz)
impl core::ops::arith::MulAssign<f32> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::sub(self, rhs: moxcms::Jzczhz) -> Self::Output
impl core::ops::arith::Sub<f32> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::Jzczhz
pub fn moxcms::Jzczhz::sub_assign(&mut self, rhs: moxcms::Jzczhz)
impl core::ops::arith::SubAssign<f32> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::sub_assign(&mut self, rhs: f32)
impl core::ops::index::Index<usize> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = f32
pub fn moxcms::Jzczhz::index(&self, index: usize) -> &f32
impl core::ops::index::IndexMut<usize> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::index_mut(&mut self, index: usize) -> &mut f32
impl num_traits::pow::Pow<f32> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::Jzczhz> for moxcms::Jzczhz
pub type moxcms::Jzczhz::Output = moxcms::Jzczhz
pub fn moxcms::Jzczhz::pow(self, rhs: moxcms::Jzczhz) -> Self::Output
impl core::marker::Freeze for moxcms::Jzczhz
impl core::marker::Send for moxcms::Jzczhz
impl core::marker::Sync for moxcms::Jzczhz
impl core::marker::Unpin for moxcms::Jzczhz
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Jzczhz
impl core::panic::unwind_safe::UnwindSafe for moxcms::Jzczhz
impl<T, U> core::convert::Into<U> for moxcms::Jzczhz where U: core::convert::From<T>
pub fn moxcms::Jzczhz::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Jzczhz where U: core::convert::Into<T>
pub type moxcms::Jzczhz::Error = core::convert::Infallible
pub fn moxcms::Jzczhz::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Jzczhz where U: core::convert::TryFrom<T>
pub type moxcms::Jzczhz::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Jzczhz::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Jzczhz where T: core::clone::Clone
pub type moxcms::Jzczhz::Owned = T
pub fn moxcms::Jzczhz::clone_into(&self, target: &mut T)
pub fn moxcms::Jzczhz::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Jzczhz where T: 'static + ?core::marker::Sized
pub fn moxcms::Jzczhz::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Jzczhz where T: ?core::marker::Sized
pub fn moxcms::Jzczhz::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Jzczhz where T: ?core::marker::Sized
pub fn moxcms::Jzczhz::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Jzczhz where T: core::clone::Clone
pub unsafe fn moxcms::Jzczhz::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Jzczhz
pub fn moxcms::Jzczhz::from(t: T) -> T
#[repr(C)] pub struct moxcms::LCh
pub moxcms::LCh::c: f32
pub moxcms::LCh::h: f32
pub moxcms::LCh::l: f32
impl moxcms::LCh
pub fn moxcms::LCh::cbrt(&self) -> moxcms::LCh
pub fn moxcms::LCh::sqrt(&self) -> moxcms::LCh
impl moxcms::LCh
pub const fn moxcms::LCh::const_from_luv(luv: moxcms::Luv) -> Self
pub fn moxcms::LCh::from_lab(lab: moxcms::Lab) -> Self
pub fn moxcms::LCh::from_luv(luv: moxcms::Luv) -> Self
pub fn moxcms::LCh::from_xyz(xyz: moxcms::Xyz) -> Self
pub fn moxcms::LCh::from_xyz_lab(xyz: moxcms::Xyz) -> Self
pub const fn moxcms::LCh::new(l: f32, c: f32, h: f32) -> Self
pub fn moxcms::LCh::to_lab(&self) -> moxcms::Lab
pub fn moxcms::LCh::to_luv(&self) -> moxcms::Luv
pub fn moxcms::LCh::to_xyz(&self) -> moxcms::Xyz
pub fn moxcms::LCh::to_xyz_lab(&self) -> moxcms::Xyz
impl moxcms::LCh
pub fn moxcms::LCh::euclidean_distance(&self, other: moxcms::LCh) -> f32
impl moxcms::LCh
pub const fn moxcms::LCh::taxicab_distance(&self, other: Self) -> f32
impl core::clone::Clone for moxcms::LCh
pub fn moxcms::LCh::clone(&self) -> moxcms::LCh
impl core::cmp::PartialEq for moxcms::LCh
pub fn moxcms::LCh::eq(&self, other: &Self) -> bool
impl core::cmp::PartialOrd for moxcms::LCh
pub fn moxcms::LCh::partial_cmp(&self, other: &moxcms::LCh) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::LCh
pub fn moxcms::LCh::default() -> moxcms::LCh
impl core::fmt::Debug for moxcms::LCh
pub fn moxcms::LCh::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::LCh
impl core::ops::arith::Add for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::add(self, rhs: moxcms::LCh) -> moxcms::LCh
impl core::ops::arith::Add<f32> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::add(self, rhs: f32) -> Self::Output
impl core::ops::arith::AddAssign for moxcms::LCh
pub fn moxcms::LCh::add_assign(&mut self, rhs: moxcms::LCh)
impl core::ops::arith::AddAssign<f32> for moxcms::LCh
pub fn moxcms::LCh::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::div(self, rhs: moxcms::LCh) -> moxcms::LCh
impl core::ops::arith::Div<f32> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::LCh
pub fn moxcms::LCh::div_assign(&mut self, rhs: moxcms::LCh)
impl core::ops::arith::DivAssign<f32> for moxcms::LCh
pub fn moxcms::LCh::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::mul(self, rhs: moxcms::LCh) -> moxcms::LCh
impl core::ops::arith::Mul<f32> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::LCh
pub fn moxcms::LCh::mul_assign(&mut self, rhs: moxcms::LCh)
impl core::ops::arith::MulAssign<f32> for moxcms::LCh
pub fn moxcms::LCh::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::sub(self, rhs: moxcms::LCh) -> moxcms::LCh
impl core::ops::arith::Sub<f32> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::LCh
pub fn moxcms::LCh::sub_assign(&mut self, rhs: moxcms::LCh)
impl core::ops::arith::SubAssign<f32> for moxcms::LCh
pub fn moxcms::LCh::sub_assign(&mut self, rhs: f32)
impl num_traits::pow::Pow<f32> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::LCh> for moxcms::LCh
pub type moxcms::LCh::Output = moxcms::LCh
pub fn moxcms::LCh::pow(self, rhs: moxcms::LCh) -> Self::Output
impl core::marker::Freeze for moxcms::LCh
impl core::marker::Send for moxcms::LCh
impl core::marker::Sync for moxcms::LCh
impl core::marker::Unpin for moxcms::LCh
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LCh
impl core::panic::unwind_safe::UnwindSafe for moxcms::LCh
impl<T, U> core::convert::Into<U> for moxcms::LCh where U: core::convert::From<T>
pub fn moxcms::LCh::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LCh where U: core::convert::Into<T>
pub type moxcms::LCh::Error = core::convert::Infallible
pub fn moxcms::LCh::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LCh where U: core::convert::TryFrom<T>
pub type moxcms::LCh::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LCh::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LCh where T: core::clone::Clone
pub type moxcms::LCh::Owned = T
pub fn moxcms::LCh::clone_into(&self, target: &mut T)
pub fn moxcms::LCh::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LCh where T: 'static + ?core::marker::Sized
pub fn moxcms::LCh::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LCh where T: ?core::marker::Sized
pub fn moxcms::LCh::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LCh where T: ?core::marker::Sized
pub fn moxcms::LCh::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LCh where T: core::clone::Clone
pub unsafe fn moxcms::LCh::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LCh
pub fn moxcms::LCh::from(t: T) -> T
#[repr(C)] pub struct moxcms::Lab
pub moxcms::Lab::a: f32
pub moxcms::Lab::b: f32
pub moxcms::Lab::l: f32
impl moxcms::Lab
pub fn moxcms::Lab::desaturate_pcs(self) -> moxcms::Lab
pub const fn moxcms::Lab::from_pcs_xyz(xyz: moxcms::Xyz) -> Self
pub const fn moxcms::Lab::from_xyz(xyz: moxcms::Xyz) -> Self
pub const fn moxcms::Lab::to_pcs_xyz(self) -> moxcms::Xyz
pub const fn moxcms::Lab::to_xyz(self) -> moxcms::Xyz
impl moxcms::Lab
pub const fn moxcms::Lab::new(l: f32, a: f32, b: f32) -> Self
impl core::clone::Clone for moxcms::Lab
pub fn moxcms::Lab::clone(&self) -> moxcms::Lab
impl core::cmp::PartialEq for moxcms::Lab
pub fn moxcms::Lab::eq(&self, other: &moxcms::Lab) -> bool
impl core::cmp::PartialOrd for moxcms::Lab
pub fn moxcms::Lab::partial_cmp(&self, other: &moxcms::Lab) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::Lab
pub fn moxcms::Lab::default() -> moxcms::Lab
impl core::fmt::Debug for moxcms::Lab
pub fn moxcms::Lab::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Lab
impl core::marker::StructuralPartialEq for moxcms::Lab
impl core::marker::Freeze for moxcms::Lab
impl core::marker::Send for moxcms::Lab
impl core::marker::Sync for moxcms::Lab
impl core::marker::Unpin for moxcms::Lab
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Lab
impl core::panic::unwind_safe::UnwindSafe for moxcms::Lab
impl<T, U> core::convert::Into<U> for moxcms::Lab where U: core::convert::From<T>
pub fn moxcms::Lab::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Lab where U: core::convert::Into<T>
pub type moxcms::Lab::Error = core::convert::Infallible
pub fn moxcms::Lab::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Lab where U: core::convert::TryFrom<T>
pub type moxcms::Lab::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Lab::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Lab where T: core::clone::Clone
pub type moxcms::Lab::Owned = T
pub fn moxcms::Lab::clone_into(&self, target: &mut T)
pub fn moxcms::Lab::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Lab where T: 'static + ?core::marker::Sized
pub fn moxcms::Lab::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Lab where T: ?core::marker::Sized
pub fn moxcms::Lab::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Lab where T: ?core::marker::Sized
pub fn moxcms::Lab::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Lab where T: core::clone::Clone
pub unsafe fn moxcms::Lab::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Lab
pub fn moxcms::Lab::from(t: T) -> T
pub struct moxcms::LocalizableString
pub moxcms::LocalizableString::country: alloc::string::String
pub moxcms::LocalizableString::language: alloc::string::String
pub moxcms::LocalizableString::value: alloc::string::String
impl moxcms::LocalizableString
pub fn moxcms::LocalizableString::new(language: alloc::string::String, country: alloc::string::String, value: alloc::string::String) -> Self
impl core::clone::Clone for moxcms::LocalizableString
pub fn moxcms::LocalizableString::clone(&self) -> moxcms::LocalizableString
impl core::fmt::Debug for moxcms::LocalizableString
pub fn moxcms::LocalizableString::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::LocalizableString
impl core::marker::Send for moxcms::LocalizableString
impl core::marker::Sync for moxcms::LocalizableString
impl core::marker::Unpin for moxcms::LocalizableString
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LocalizableString
impl core::panic::unwind_safe::UnwindSafe for moxcms::LocalizableString
impl<T, U> core::convert::Into<U> for moxcms::LocalizableString where U: core::convert::From<T>
pub fn moxcms::LocalizableString::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LocalizableString where U: core::convert::Into<T>
pub type moxcms::LocalizableString::Error = core::convert::Infallible
pub fn moxcms::LocalizableString::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LocalizableString where U: core::convert::TryFrom<T>
pub type moxcms::LocalizableString::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LocalizableString::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LocalizableString where T: core::clone::Clone
pub type moxcms::LocalizableString::Owned = T
pub fn moxcms::LocalizableString::clone_into(&self, target: &mut T)
pub fn moxcms::LocalizableString::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LocalizableString where T: 'static + ?core::marker::Sized
pub fn moxcms::LocalizableString::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LocalizableString where T: ?core::marker::Sized
pub fn moxcms::LocalizableString::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LocalizableString where T: ?core::marker::Sized
pub fn moxcms::LocalizableString::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LocalizableString where T: core::clone::Clone
pub unsafe fn moxcms::LocalizableString::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LocalizableString
pub fn moxcms::LocalizableString::from(t: T) -> T
pub struct moxcms::LutMultidimensionalType
pub moxcms::LutMultidimensionalType::a_curves: alloc::vec::Vec<moxcms::ToneReprCurve>
pub moxcms::LutMultidimensionalType::b_curves: alloc::vec::Vec<moxcms::ToneReprCurve>
pub moxcms::LutMultidimensionalType::bias: moxcms::Vector3d
pub moxcms::LutMultidimensionalType::clut: core::option::Option<moxcms::LutStore>
pub moxcms::LutMultidimensionalType::grid_points: [u8; 16]
pub moxcms::LutMultidimensionalType::m_curves: alloc::vec::Vec<moxcms::ToneReprCurve>
pub moxcms::LutMultidimensionalType::matrix: moxcms::Matrix3d
pub moxcms::LutMultidimensionalType::num_input_channels: u8
pub moxcms::LutMultidimensionalType::num_output_channels: u8
impl core::clone::Clone for moxcms::LutMultidimensionalType
pub fn moxcms::LutMultidimensionalType::clone(&self) -> moxcms::LutMultidimensionalType
impl core::fmt::Debug for moxcms::LutMultidimensionalType
pub fn moxcms::LutMultidimensionalType::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Freeze for moxcms::LutMultidimensionalType
impl core::marker::Send for moxcms::LutMultidimensionalType
impl core::marker::Sync for moxcms::LutMultidimensionalType
impl core::marker::Unpin for moxcms::LutMultidimensionalType
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::LutMultidimensionalType
impl core::panic::unwind_safe::UnwindSafe for moxcms::LutMultidimensionalType
impl<T, U> core::convert::Into<U> for moxcms::LutMultidimensionalType where U: core::convert::From<T>
pub fn moxcms::LutMultidimensionalType::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::LutMultidimensionalType where U: core::convert::Into<T>
pub type moxcms::LutMultidimensionalType::Error = core::convert::Infallible
pub fn moxcms::LutMultidimensionalType::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::LutMultidimensionalType where U: core::convert::TryFrom<T>
pub type moxcms::LutMultidimensionalType::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::LutMultidimensionalType::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::LutMultidimensionalType where T: core::clone::Clone
pub type moxcms::LutMultidimensionalType::Owned = T
pub fn moxcms::LutMultidimensionalType::clone_into(&self, target: &mut T)
pub fn moxcms::LutMultidimensionalType::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::LutMultidimensionalType where T: 'static + ?core::marker::Sized
pub fn moxcms::LutMultidimensionalType::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::LutMultidimensionalType where T: ?core::marker::Sized
pub fn moxcms::LutMultidimensionalType::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::LutMultidimensionalType where T: ?core::marker::Sized
pub fn moxcms::LutMultidimensionalType::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::LutMultidimensionalType where T: core::clone::Clone
pub unsafe fn moxcms::LutMultidimensionalType::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::LutMultidimensionalType
pub fn moxcms::LutMultidimensionalType::from(t: T) -> T
#[repr(C)] pub struct moxcms::Luv
pub moxcms::Luv::l: f32
pub moxcms::Luv::u: f32
pub moxcms::Luv::v: f32
impl moxcms::Luv
pub fn moxcms::Luv::cbrt(&self) -> moxcms::Luv
pub fn moxcms::Luv::sqrt(&self) -> moxcms::Luv
impl moxcms::Luv
pub fn moxcms::Luv::euclidean_distance(&self, other: moxcms::Luv) -> f32
impl moxcms::Luv
pub fn moxcms::Luv::from_xyz(xyz: moxcms::Xyz) -> Self
pub const fn moxcms::Luv::new(l: f32, u: f32, v: f32) -> moxcms::Luv
pub const fn moxcms::Luv::to_xyz(&self) -> moxcms::Xyz
impl moxcms::Luv
pub const fn moxcms::Luv::taxicab_distance(&self, other: Self) -> f32
impl core::clone::Clone for moxcms::Luv
pub fn moxcms::Luv::clone(&self) -> moxcms::Luv
impl core::cmp::PartialEq for moxcms::Luv
pub fn moxcms::Luv::eq(&self, other: &Self) -> bool
impl core::cmp::PartialOrd for moxcms::Luv
pub fn moxcms::Luv::partial_cmp(&self, other: &moxcms::Luv) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::Luv
pub fn moxcms::Luv::default() -> moxcms::Luv
impl core::fmt::Debug for moxcms::Luv
pub fn moxcms::Luv::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Luv
impl core::ops::arith::Add for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::add(self, rhs: moxcms::Luv) -> moxcms::Luv
impl core::ops::arith::Add<f32> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::add(self, rhs: f32) -> Self::Output
impl core::ops::arith::AddAssign for moxcms::Luv
pub fn moxcms::Luv::add_assign(&mut self, rhs: moxcms::Luv)
impl core::ops::arith::AddAssign<f32> for moxcms::Luv
pub fn moxcms::Luv::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::div(self, rhs: moxcms::Luv) -> moxcms::Luv
impl core::ops::arith::Div<f32> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::Luv
pub fn moxcms::Luv::div_assign(&mut self, rhs: moxcms::Luv)
impl core::ops::arith::DivAssign<f32> for moxcms::Luv
pub fn moxcms::Luv::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::mul(self, rhs: moxcms::Luv) -> moxcms::Luv
impl core::ops::arith::Mul<f32> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::Luv
pub fn moxcms::Luv::mul_assign(&mut self, rhs: moxcms::Luv)
impl core::ops::arith::MulAssign<f32> for moxcms::Luv
pub fn moxcms::Luv::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::sub(self, rhs: moxcms::Luv) -> moxcms::Luv
impl core::ops::arith::Sub<f32> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::Luv
pub fn moxcms::Luv::sub_assign(&mut self, rhs: moxcms::Luv)
impl core::ops::arith::SubAssign<f32> for moxcms::Luv
pub fn moxcms::Luv::sub_assign(&mut self, rhs: f32)
impl num_traits::pow::Pow<f32> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::Luv> for moxcms::Luv
pub type moxcms::Luv::Output = moxcms::Luv
pub fn moxcms::Luv::pow(self, rhs: moxcms::Luv) -> Self::Output
impl core::marker::Freeze for moxcms::Luv
impl core::marker::Send for moxcms::Luv
impl core::marker::Sync for moxcms::Luv
impl core::marker::Unpin for moxcms::Luv
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Luv
impl core::panic::unwind_safe::UnwindSafe for moxcms::Luv
impl<T, U> core::convert::Into<U> for moxcms::Luv where U: core::convert::From<T>
pub fn moxcms::Luv::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Luv where U: core::convert::Into<T>
pub type moxcms::Luv::Error = core::convert::Infallible
pub fn moxcms::Luv::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Luv where U: core::convert::TryFrom<T>
pub type moxcms::Luv::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Luv::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Luv where T: core::clone::Clone
pub type moxcms::Luv::Owned = T
pub fn moxcms::Luv::clone_into(&self, target: &mut T)
pub fn moxcms::Luv::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Luv where T: 'static + ?core::marker::Sized
pub fn moxcms::Luv::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Luv where T: ?core::marker::Sized
pub fn moxcms::Luv::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Luv where T: ?core::marker::Sized
pub fn moxcms::Luv::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Luv where T: core::clone::Clone
pub unsafe fn moxcms::Luv::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Luv
pub fn moxcms::Luv::from(t: T) -> T
pub struct moxcms::MalformedSize
pub moxcms::MalformedSize::expected: usize
pub moxcms::MalformedSize::size: usize
impl core::clone::Clone for moxcms::MalformedSize
pub fn moxcms::MalformedSize::clone(&self) -> moxcms::MalformedSize
impl core::cmp::PartialEq for moxcms::MalformedSize
pub fn moxcms::MalformedSize::eq(&self, other: &moxcms::MalformedSize) -> bool
impl core::cmp::PartialOrd for moxcms::MalformedSize
pub fn moxcms::MalformedSize::partial_cmp(&self, other: &moxcms::MalformedSize) -> core::option::Option<core::cmp::Ordering>
impl core::fmt::Debug for moxcms::MalformedSize
pub fn moxcms::MalformedSize::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::MalformedSize
impl core::marker::StructuralPartialEq for moxcms::MalformedSize
impl core::marker::Freeze for moxcms::MalformedSize
impl core::marker::Send for moxcms::MalformedSize
impl core::marker::Sync for moxcms::MalformedSize
impl core::marker::Unpin for moxcms::MalformedSize
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::MalformedSize
impl core::panic::unwind_safe::UnwindSafe for moxcms::MalformedSize
impl<T, U> core::convert::Into<U> for moxcms::MalformedSize where U: core::convert::From<T>
pub fn moxcms::MalformedSize::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::MalformedSize where U: core::convert::Into<T>
pub type moxcms::MalformedSize::Error = core::convert::Infallible
pub fn moxcms::MalformedSize::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::MalformedSize where U: core::convert::TryFrom<T>
pub type moxcms::MalformedSize::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::MalformedSize::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::MalformedSize where T: core::clone::Clone
pub type moxcms::MalformedSize::Owned = T
pub fn moxcms::MalformedSize::clone_into(&self, target: &mut T)
pub fn moxcms::MalformedSize::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::MalformedSize where T: 'static + ?core::marker::Sized
pub fn moxcms::MalformedSize::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::MalformedSize where T: ?core::marker::Sized
pub fn moxcms::MalformedSize::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::MalformedSize where T: ?core::marker::Sized
pub fn moxcms::MalformedSize::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::MalformedSize where T: core::clone::Clone
pub unsafe fn moxcms::MalformedSize::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::MalformedSize
pub fn moxcms::MalformedSize::from(t: T) -> T
#[repr(C)] pub struct moxcms::Matrix3<T>
pub moxcms::Matrix3::v: [[T; 3]; 3]
impl<T: core::clone::Clone> core::clone::Clone for moxcms::Matrix3<T>
pub fn moxcms::Matrix3<T>::clone(&self) -> moxcms::Matrix3<T>
impl<T: core::default::Default> core::default::Default for moxcms::Matrix3<T>
pub fn moxcms::Matrix3<T>::default() -> moxcms::Matrix3<T>
impl<T: core::fmt::Debug> core::fmt::Debug for moxcms::Matrix3<T>
pub fn moxcms::Matrix3<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: core::marker::Copy> core::marker::Copy for moxcms::Matrix3<T>
impl<T> core::marker::Freeze for moxcms::Matrix3<T> where T: core::marker::Freeze
impl<T> core::marker::Send for moxcms::Matrix3<T> where T: core::marker::Send
impl<T> core::marker::Sync for moxcms::Matrix3<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for moxcms::Matrix3<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for moxcms::Matrix3<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for moxcms::Matrix3<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for moxcms::Matrix3<T> where U: core::convert::From<T>
pub fn moxcms::Matrix3<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Matrix3<T> where U: core::convert::Into<T>
pub type moxcms::Matrix3<T>::Error = core::convert::Infallible
pub fn moxcms::Matrix3<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Matrix3<T> where U: core::convert::TryFrom<T>
pub type moxcms::Matrix3<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Matrix3<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Matrix3<T> where T: core::clone::Clone
pub type moxcms::Matrix3<T>::Owned = T
pub fn moxcms::Matrix3<T>::clone_into(&self, target: &mut T)
pub fn moxcms::Matrix3<T>::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Matrix3<T> where T: 'static + ?core::marker::Sized
pub fn moxcms::Matrix3<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Matrix3<T> where T: ?core::marker::Sized
pub fn moxcms::Matrix3<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Matrix3<T> where T: ?core::marker::Sized
pub fn moxcms::Matrix3<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Matrix3<T> where T: core::clone::Clone
pub unsafe fn moxcms::Matrix3<T>::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Matrix3<T>
pub fn moxcms::Matrix3<T>::from(t: T) -> T
#[repr(C)] pub struct moxcms::Matrix3d
pub moxcms::Matrix3d::v: [[f64; 3]; 3]
impl moxcms::Matrix3d
pub const moxcms::Matrix3d::IDENTITY: moxcms::Matrix3d
pub const fn moxcms::Matrix3d::determinant(&self) -> core::option::Option<f64>
pub const fn moxcms::Matrix3d::inverse(&self) -> Self
pub fn moxcms::Matrix3d::mat_mul(&self, other: moxcms::Matrix3d) -> Self
pub const fn moxcms::Matrix3d::mat_mul_const(&self, other: moxcms::Matrix3d) -> Self
pub fn moxcms::Matrix3d::mul_row<const R: usize>(&self, rhs: f64) -> Self
pub const fn moxcms::Matrix3d::mul_row_vector<const R: usize>(&self, rhs: moxcms::Vector3d) -> Self
pub const fn moxcms::Matrix3d::mul_vector(&self, other: moxcms::Vector3d) -> moxcms::Vector3d
pub const fn moxcms::Matrix3d::test_equality(&self, other: moxcms::Matrix3d) -> bool
pub const fn moxcms::Matrix3d::to_f32(&self) -> moxcms::Matrix3f
pub fn moxcms::Matrix3d::transpose(&self) -> moxcms::Matrix3d
impl core::clone::Clone for moxcms::Matrix3d
pub fn moxcms::Matrix3d::clone(&self) -> moxcms::Matrix3d
impl core::default::Default for moxcms::Matrix3d
pub fn moxcms::Matrix3d::default() -> moxcms::Matrix3d
impl core::fmt::Debug for moxcms::Matrix3d
pub fn moxcms::Matrix3d::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Matrix3d
impl core::ops::arith::Mul for moxcms::Matrix3d
pub type moxcms::Matrix3d::Output = moxcms::Matrix3d
pub fn moxcms::Matrix3d::mul(self, rhs: moxcms::Matrix3d) -> Self::Output
impl core::marker::Freeze for moxcms::Matrix3d
impl core::marker::Send for moxcms::Matrix3d
impl core::marker::Sync for moxcms::Matrix3d
impl core::marker::Unpin for moxcms::Matrix3d
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Matrix3d
impl core::panic::unwind_safe::UnwindSafe for moxcms::Matrix3d
impl<T, U> core::convert::Into<U> for moxcms::Matrix3d where U: core::convert::From<T>
pub fn moxcms::Matrix3d::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Matrix3d where U: core::convert::Into<T>
pub type moxcms::Matrix3d::Error = core::convert::Infallible
pub fn moxcms::Matrix3d::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Matrix3d where U: core::convert::TryFrom<T>
pub type moxcms::Matrix3d::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Matrix3d::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Matrix3d where T: core::clone::Clone
pub type moxcms::Matrix3d::Owned = T
pub fn moxcms::Matrix3d::clone_into(&self, target: &mut T)
pub fn moxcms::Matrix3d::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Matrix3d where T: 'static + ?core::marker::Sized
pub fn moxcms::Matrix3d::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Matrix3d where T: ?core::marker::Sized
pub fn moxcms::Matrix3d::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Matrix3d where T: ?core::marker::Sized
pub fn moxcms::Matrix3d::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Matrix3d where T: core::clone::Clone
pub unsafe fn moxcms::Matrix3d::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Matrix3d
pub fn moxcms::Matrix3d::from(t: T) -> T
#[repr(C)] pub struct moxcms::Matrix3f
pub moxcms::Matrix3f::v: [[f32; 3]; 3]
impl moxcms::Matrix3f
pub const moxcms::Matrix3f::IDENTITY: moxcms::Matrix3f
pub const fn moxcms::Matrix3f::determinant(&self) -> core::option::Option<f32>
pub fn moxcms::Matrix3f::f_mul_vector(&self, other: moxcms::Vector3f) -> moxcms::Vector3f
pub const fn moxcms::Matrix3f::inverse(&self) -> Self
pub fn moxcms::Matrix3f::mat_mul(&self, other: moxcms::Matrix3f) -> Self
pub const fn moxcms::Matrix3f::mat_mul_const(&self, other: moxcms::Matrix3f) -> Self
pub fn moxcms::Matrix3f::mul_row<const R: usize>(&self, rhs: f32) -> Self
pub const fn moxcms::Matrix3f::mul_row_vector<const R: usize>(&self, rhs: moxcms::Vector3f) -> Self
pub const fn moxcms::Matrix3f::mul_vector(&self, other: moxcms::Vector3f) -> moxcms::Vector3f
pub const fn moxcms::Matrix3f::test_equality(&self, other: moxcms::Matrix3f) -> bool
pub const fn moxcms::Matrix3f::to_f64(&self) -> moxcms::Matrix3d
pub fn moxcms::Matrix3f::transpose(&self) -> moxcms::Matrix3f
impl core::clone::Clone for moxcms::Matrix3f
pub fn moxcms::Matrix3f::clone(&self) -> moxcms::Matrix3f
impl core::default::Default for moxcms::Matrix3f
pub fn moxcms::Matrix3f::default() -> moxcms::Matrix3f
impl core::fmt::Debug for moxcms::Matrix3f
pub fn moxcms::Matrix3f::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Matrix3f
impl core::ops::arith::Mul for moxcms::Matrix3f
pub type moxcms::Matrix3f::Output = moxcms::Matrix3f
pub fn moxcms::Matrix3f::mul(self, rhs: moxcms::Matrix3f) -> Self::Output
impl core::marker::Freeze for moxcms::Matrix3f
impl core::marker::Send for moxcms::Matrix3f
impl core::marker::Sync for moxcms::Matrix3f
impl core::marker::Unpin for moxcms::Matrix3f
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Matrix3f
impl core::panic::unwind_safe::UnwindSafe for moxcms::Matrix3f
impl<T, U> core::convert::Into<U> for moxcms::Matrix3f where U: core::convert::From<T>
pub fn moxcms::Matrix3f::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Matrix3f where U: core::convert::Into<T>
pub type moxcms::Matrix3f::Error = core::convert::Infallible
pub fn moxcms::Matrix3f::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Matrix3f where U: core::convert::TryFrom<T>
pub type moxcms::Matrix3f::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Matrix3f::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Matrix3f where T: core::clone::Clone
pub type moxcms::Matrix3f::Owned = T
pub fn moxcms::Matrix3f::clone_into(&self, target: &mut T)
pub fn moxcms::Matrix3f::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Matrix3f where T: 'static + ?core::marker::Sized
pub fn moxcms::Matrix3f::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Matrix3f where T: ?core::marker::Sized
pub fn moxcms::Matrix3f::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Matrix3f where T: ?core::marker::Sized
pub fn moxcms::Matrix3f::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Matrix3f where T: core::clone::Clone
pub unsafe fn moxcms::Matrix3f::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Matrix3f
pub fn moxcms::Matrix3f::from(t: T) -> T
#[repr(C)] pub struct moxcms::Matrix4f
pub moxcms::Matrix4f::v: [[f32; 4]; 4]
impl moxcms::Matrix4f
pub fn moxcms::Matrix4f::determinant(&self) -> core::option::Option<f32>
impl core::clone::Clone for moxcms::Matrix4f
pub fn moxcms::Matrix4f::clone(&self) -> moxcms::Matrix4f
impl core::default::Default for moxcms::Matrix4f
pub fn moxcms::Matrix4f::default() -> moxcms::Matrix4f
impl core::fmt::Debug for moxcms::Matrix4f
pub fn moxcms::Matrix4f::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Matrix4f
impl core::marker::Freeze for moxcms::Matrix4f
impl core::marker::Send for moxcms::Matrix4f
impl core::marker::Sync for moxcms::Matrix4f
impl core::marker::Unpin for moxcms::Matrix4f
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Matrix4f
impl core::panic::unwind_safe::UnwindSafe for moxcms::Matrix4f
impl<T, U> core::convert::Into<U> for moxcms::Matrix4f where U: core::convert::From<T>
pub fn moxcms::Matrix4f::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Matrix4f where U: core::convert::Into<T>
pub type moxcms::Matrix4f::Error = core::convert::Infallible
pub fn moxcms::Matrix4f::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Matrix4f where U: core::convert::TryFrom<T>
pub type moxcms::Matrix4f::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Matrix4f::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Matrix4f where T: core::clone::Clone
pub type moxcms::Matrix4f::Owned = T
pub fn moxcms::Matrix4f::clone_into(&self, target: &mut T)
pub fn moxcms::Matrix4f::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Matrix4f where T: 'static + ?core::marker::Sized
pub fn moxcms::Matrix4f::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Matrix4f where T: ?core::marker::Sized
pub fn moxcms::Matrix4f::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Matrix4f where T: ?core::marker::Sized
pub fn moxcms::Matrix4f::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Matrix4f where T: core::clone::Clone
pub unsafe fn moxcms::Matrix4f::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Matrix4f
pub fn moxcms::Matrix4f::from(t: T) -> T
pub struct moxcms::Measurement
pub moxcms::Measurement::backing: moxcms::Xyz
pub moxcms::Measurement::flare: f32
pub moxcms::Measurement::geometry: moxcms::MeasurementGeometry
pub moxcms::Measurement::illuminant: moxcms::StandardIlluminant
pub moxcms::Measurement::observer: moxcms::StandardObserver
impl core::clone::Clone for moxcms::Measurement
pub fn moxcms::Measurement::clone(&self) -> moxcms::Measurement
impl core::fmt::Debug for moxcms::Measurement
pub fn moxcms::Measurement::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Measurement
impl core::marker::Freeze for moxcms::Measurement
impl core::marker::Send for moxcms::Measurement
impl core::marker::Sync for moxcms::Measurement
impl core::marker::Unpin for moxcms::Measurement
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Measurement
impl core::panic::unwind_safe::UnwindSafe for moxcms::Measurement
impl<T, U> core::convert::Into<U> for moxcms::Measurement where U: core::convert::From<T>
pub fn moxcms::Measurement::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Measurement where U: core::convert::Into<T>
pub type moxcms::Measurement::Error = core::convert::Infallible
pub fn moxcms::Measurement::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Measurement where U: core::convert::TryFrom<T>
pub type moxcms::Measurement::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Measurement::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Measurement where T: core::clone::Clone
pub type moxcms::Measurement::Owned = T
pub fn moxcms::Measurement::clone_into(&self, target: &mut T)
pub fn moxcms::Measurement::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Measurement where T: 'static + ?core::marker::Sized
pub fn moxcms::Measurement::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Measurement where T: ?core::marker::Sized
pub fn moxcms::Measurement::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Measurement where T: ?core::marker::Sized
pub fn moxcms::Measurement::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Measurement where T: core::clone::Clone
pub unsafe fn moxcms::Measurement::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Measurement
pub fn moxcms::Measurement::from(t: T) -> T
#[repr(C)] pub struct moxcms::Oklab
pub moxcms::Oklab::a: f32
pub moxcms::Oklab::b: f32
pub moxcms::Oklab::l: f32
impl moxcms::Oklab
pub fn moxcms::Oklab::cbrt(&self) -> moxcms::Oklab
pub fn moxcms::Oklab::sqrt(&self) -> moxcms::Oklab
impl moxcms::Oklab
pub fn moxcms::Oklab::euclidean_distance(&self, other: Self) -> f32
impl moxcms::Oklab
pub fn moxcms::Oklab::from_linear_rgb(rgb: moxcms::Rgb<f32>) -> moxcms::Oklab
pub fn moxcms::Oklab::hybrid_distance(&self, other: Self) -> f32
pub const fn moxcms::Oklab::new(l: f32, a: f32, b: f32) -> moxcms::Oklab
pub fn moxcms::Oklab::to_linear_rgb(&self) -> moxcms::Rgb<f32>
impl moxcms::Oklab
pub fn moxcms::Oklab::taxicab_distance(&self, other: Self) -> f32
impl core::clone::Clone for moxcms::Oklab
pub fn moxcms::Oklab::clone(&self) -> moxcms::Oklab
impl core::cmp::PartialEq for moxcms::Oklab
pub fn moxcms::Oklab::eq(&self, other: &moxcms::Oklab) -> bool
impl core::cmp::PartialOrd for moxcms::Oklab
pub fn moxcms::Oklab::partial_cmp(&self, other: &moxcms::Oklab) -> core::option::Option<core::cmp::Ordering>
impl core::fmt::Debug for moxcms::Oklab
pub fn moxcms::Oklab::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Oklab
impl core::marker::StructuralPartialEq for moxcms::Oklab
impl core::ops::arith::Add for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::add(self, rhs: Self) -> moxcms::Oklab
impl core::ops::arith::Add<f32> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::add(self, rhs: f32) -> moxcms::Oklab
impl core::ops::arith::AddAssign for moxcms::Oklab
pub fn moxcms::Oklab::add_assign(&mut self, rhs: moxcms::Oklab)
impl core::ops::arith::AddAssign<f32> for moxcms::Oklab
pub fn moxcms::Oklab::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::div(self, rhs: moxcms::Oklab) -> Self::Output
impl core::ops::arith::Div<f32> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::Oklab
pub fn moxcms::Oklab::div_assign(&mut self, rhs: moxcms::Oklab)
impl core::ops::arith::DivAssign<f32> for moxcms::Oklab
pub fn moxcms::Oklab::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::mul(self, rhs: moxcms::Oklab) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::Oklab
pub fn moxcms::Oklab::mul_assign(&mut self, rhs: moxcms::Oklab)
impl core::ops::arith::MulAssign<f32> for moxcms::Oklab
pub fn moxcms::Oklab::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::sub(self, rhs: moxcms::Oklab) -> Self::Output
impl core::ops::arith::Sub<f32> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::Oklab
pub fn moxcms::Oklab::sub_assign(&mut self, rhs: moxcms::Oklab)
impl core::ops::arith::SubAssign<f32> for moxcms::Oklab
pub fn moxcms::Oklab::sub_assign(&mut self, rhs: f32)
impl num_traits::pow::Pow<f32> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::Oklab> for moxcms::Oklab
pub type moxcms::Oklab::Output = moxcms::Oklab
pub fn moxcms::Oklab::pow(self, rhs: moxcms::Oklab) -> Self::Output
impl core::marker::Freeze for moxcms::Oklab
impl core::marker::Send for moxcms::Oklab
impl core::marker::Sync for moxcms::Oklab
impl core::marker::Unpin for moxcms::Oklab
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Oklab
impl core::panic::unwind_safe::UnwindSafe for moxcms::Oklab
impl<T, U> core::convert::Into<U> for moxcms::Oklab where U: core::convert::From<T>
pub fn moxcms::Oklab::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Oklab where U: core::convert::Into<T>
pub type moxcms::Oklab::Error = core::convert::Infallible
pub fn moxcms::Oklab::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Oklab where U: core::convert::TryFrom<T>
pub type moxcms::Oklab::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Oklab::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Oklab where T: core::clone::Clone
pub type moxcms::Oklab::Owned = T
pub fn moxcms::Oklab::clone_into(&self, target: &mut T)
pub fn moxcms::Oklab::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Oklab where T: 'static + ?core::marker::Sized
pub fn moxcms::Oklab::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Oklab where T: ?core::marker::Sized
pub fn moxcms::Oklab::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Oklab where T: ?core::marker::Sized
pub fn moxcms::Oklab::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Oklab where T: core::clone::Clone
pub unsafe fn moxcms::Oklab::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Oklab
pub fn moxcms::Oklab::from(t: T) -> T
#[repr(C)] pub struct moxcms::Oklch
pub moxcms::Oklch::c: f32
pub moxcms::Oklch::h: f32
pub moxcms::Oklch::l: f32
impl moxcms::Oklch
pub fn moxcms::Oklch::cbrt(&self) -> moxcms::Oklch
pub fn moxcms::Oklch::sqrt(&self) -> moxcms::Oklch
impl moxcms::Oklch
pub const fn moxcms::Oklch::const_from_oklab(oklab: moxcms::Oklab) -> moxcms::Oklch
pub fn moxcms::Oklch::from_linear_rgb(rgb: moxcms::Rgb<f32>) -> moxcms::Oklch
pub fn moxcms::Oklch::from_oklab(oklab: moxcms::Oklab) -> moxcms::Oklch
pub const fn moxcms::Oklch::new(l: f32, c: f32, h: f32) -> moxcms::Oklch
pub fn moxcms::Oklch::to_linear_rgb(&self) -> moxcms::Rgb<f32>
pub fn moxcms::Oklch::to_oklab(&self) -> moxcms::Oklab
impl moxcms::Oklch
pub fn moxcms::Oklch::euclidean_distance(&self, other: Self) -> f32
impl moxcms::Oklch
pub fn moxcms::Oklch::taxicab_distance(&self, other: Self) -> f32
impl core::clone::Clone for moxcms::Oklch
pub fn moxcms::Oklch::clone(&self) -> moxcms::Oklch
impl core::cmp::PartialEq for moxcms::Oklch
pub fn moxcms::Oklch::eq(&self, other: &moxcms::Oklch) -> bool
impl core::cmp::PartialOrd for moxcms::Oklch
pub fn moxcms::Oklch::partial_cmp(&self, other: &moxcms::Oklch) -> core::option::Option<core::cmp::Ordering>
impl core::marker::Copy for moxcms::Oklch
impl core::marker::StructuralPartialEq for moxcms::Oklch
impl core::ops::arith::Add for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::add(self, rhs: Self) -> moxcms::Oklch
impl core::ops::arith::Add<f32> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::add(self, rhs: f32) -> moxcms::Oklch
impl core::ops::arith::AddAssign for moxcms::Oklch
pub fn moxcms::Oklch::add_assign(&mut self, rhs: moxcms::Oklch)
impl core::ops::arith::AddAssign<f32> for moxcms::Oklch
pub fn moxcms::Oklch::add_assign(&mut self, rhs: f32)
impl core::ops::arith::Div for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::div(self, rhs: moxcms::Oklch) -> Self::Output
impl core::ops::arith::Div<f32> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::DivAssign for moxcms::Oklch
pub fn moxcms::Oklch::div_assign(&mut self, rhs: moxcms::Oklch)
impl core::ops::arith::DivAssign<f32> for moxcms::Oklch
pub fn moxcms::Oklch::div_assign(&mut self, rhs: f32)
impl core::ops::arith::Mul for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::mul(self, rhs: moxcms::Oklch) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::mul(self, rhs: f32) -> Self::Output
impl core::ops::arith::MulAssign for moxcms::Oklch
pub fn moxcms::Oklch::mul_assign(&mut self, rhs: moxcms::Oklch)
impl core::ops::arith::MulAssign<f32> for moxcms::Oklch
pub fn moxcms::Oklch::mul_assign(&mut self, rhs: f32)
impl core::ops::arith::Neg for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::neg(self) -> Self::Output
impl core::ops::arith::Sub for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::sub(self, rhs: moxcms::Oklch) -> Self::Output
impl core::ops::arith::Sub<f32> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::sub(self, rhs: f32) -> Self::Output
impl core::ops::arith::SubAssign for moxcms::Oklch
pub fn moxcms::Oklch::sub_assign(&mut self, rhs: moxcms::Oklch)
impl core::ops::arith::SubAssign<f32> for moxcms::Oklch
pub fn moxcms::Oklch::sub_assign(&mut self, rhs: f32)
impl num_traits::pow::Pow<f32> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::pow(self, rhs: f32) -> Self::Output
impl num_traits::pow::Pow<moxcms::Oklch> for moxcms::Oklch
pub type moxcms::Oklch::Output = moxcms::Oklch
pub fn moxcms::Oklch::pow(self, rhs: moxcms::Oklch) -> Self::Output
impl core::marker::Freeze for moxcms::Oklch
impl core::marker::Send for moxcms::Oklch
impl core::marker::Sync for moxcms::Oklch
impl core::marker::Unpin for moxcms::Oklch
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Oklch
impl core::panic::unwind_safe::UnwindSafe for moxcms::Oklch
impl<T, U> core::convert::Into<U> for moxcms::Oklch where U: core::convert::From<T>
pub fn moxcms::Oklch::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Oklch where U: core::convert::Into<T>
pub type moxcms::Oklch::Error = core::convert::Infallible
pub fn moxcms::Oklch::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Oklch where U: core::convert::TryFrom<T>
pub type moxcms::Oklch::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Oklch::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Oklch where T: core::clone::Clone
pub type moxcms::Oklch::Owned = T
pub fn moxcms::Oklch::clone_into(&self, target: &mut T)
pub fn moxcms::Oklch::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Oklch where T: 'static + ?core::marker::Sized
pub fn moxcms::Oklch::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Oklch where T: ?core::marker::Sized
pub fn moxcms::Oklch::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Oklch where T: ?core::marker::Sized
pub fn moxcms::Oklch::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Oklch where T: core::clone::Clone
pub unsafe fn moxcms::Oklch::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Oklch
pub fn moxcms::Oklch::from(t: T) -> T
#[repr(C)] pub struct moxcms::Rgb<T>
pub moxcms::Rgb::b: T
pub moxcms::Rgb::g: T
pub moxcms::Rgb::r: T
impl moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::apply(&self, matrix: moxcms::Matrix3f) -> moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::is_out_of_gamut(&self) -> bool
pub fn moxcms::Rgb<f32>::to_xyz(&self, matrix: moxcms::Matrix3f) -> moxcms::Xyz
impl moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::black() -> moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::ones() -> moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::white() -> moxcms::Rgb<f32>
pub fn moxcms::Rgb<f32>::zeroed() -> moxcms::Rgb<f32>
impl moxcms::Rgb<f64>
pub fn moxcms::Rgb<f64>::black() -> moxcms::Rgb<f64>
pub fn moxcms::Rgb<f64>::ones() -> moxcms::Rgb<f64>
pub fn moxcms::Rgb<f64>::white() -> moxcms::Rgb<f64>
pub fn moxcms::Rgb<f64>::zeroed() -> moxcms::Rgb<f64>
impl moxcms::Rgb<i16>
pub fn moxcms::Rgb<i16>::black() -> moxcms::Rgb<i16>
pub fn moxcms::Rgb<i16>::capped() -> moxcms::Rgb<i16>
pub fn moxcms::Rgb<i16>::white() -> moxcms::Rgb<i16>
pub fn moxcms::Rgb<i16>::zeroed() -> moxcms::Rgb<i16>
impl moxcms::Rgb<i32>
pub fn moxcms::Rgb<i32>::black() -> moxcms::Rgb<i32>
pub fn moxcms::Rgb<i32>::capped() -> moxcms::Rgb<i32>
pub fn moxcms::Rgb<i32>::white() -> moxcms::Rgb<i32>
pub fn moxcms::Rgb<i32>::zeroed() -> moxcms::Rgb<i32>
impl moxcms::Rgb<i8>
pub fn moxcms::Rgb<i8>::black() -> moxcms::Rgb<i8>
pub fn moxcms::Rgb<i8>::capped() -> moxcms::Rgb<i8>
pub fn moxcms::Rgb<i8>::white() -> moxcms::Rgb<i8>
pub fn moxcms::Rgb<i8>::zeroed() -> moxcms::Rgb<i8>
impl moxcms::Rgb<u16>
pub fn moxcms::Rgb<u16>::black() -> moxcms::Rgb<u16>
pub fn moxcms::Rgb<u16>::capped() -> moxcms::Rgb<u16>
pub fn moxcms::Rgb<u16>::white() -> moxcms::Rgb<u16>
pub fn moxcms::Rgb<u16>::zeroed() -> moxcms::Rgb<u16>
impl moxcms::Rgb<u32>
pub fn moxcms::Rgb<u32>::black() -> moxcms::Rgb<u32>
pub fn moxcms::Rgb<u32>::capped() -> moxcms::Rgb<u32>
pub fn moxcms::Rgb<u32>::white() -> moxcms::Rgb<u32>
pub fn moxcms::Rgb<u32>::zeroed() -> moxcms::Rgb<u32>
impl moxcms::Rgb<u8>
pub fn moxcms::Rgb<u8>::black() -> moxcms::Rgb<u8>
pub fn moxcms::Rgb<u8>::capped() -> moxcms::Rgb<u8>
pub fn moxcms::Rgb<u8>::white() -> moxcms::Rgb<u8>
pub fn moxcms::Rgb<u8>::zeroed() -> moxcms::Rgb<u8>
impl<T> moxcms::Rgb<T> where T: core::marker::Copy + num_traits::cast::AsPrimitive<f32>
pub fn moxcms::Rgb<T>::euclidean_distance(&self, other: moxcms::Rgb<T>) -> f32
impl<T> moxcms::Rgb<T> where T: core::marker::Copy + num_traits::cast::AsPrimitive<f32>
pub fn moxcms::Rgb<T>::taxicab_distance(&self, other: Self) -> f32
impl<T> moxcms::Rgb<T> where T: core::marker::Copy
pub fn moxcms::Rgb<T>::dup(v: T) -> moxcms::Rgb<T>
pub const fn moxcms::Rgb<T>::to_vector(self) -> moxcms::Vector3<T>
impl<T> moxcms::Rgb<T> where T: num_traits::Num + core::cmp::PartialOrd + core::marker::Copy + num_traits::bounds::Bounded
pub fn moxcms::Rgb<T>::clamp(&self, min_value: T, max_value: T) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::clamp_p(&self, min_value: moxcms::Rgb<T>, max_value: moxcms::Rgb<T>) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::max(&self, other_max: T) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::max_p(&self, other_max: moxcms::Rgb<T>) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::min(&self, other_min: T) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::min_p(&self, other_min: moxcms::Rgb<T>) -> moxcms::Rgb<T>
impl<T> moxcms::Rgb<T> where T: num_traits::float::Float + 'static, f32: num_traits::cast::AsPrimitive<T>
pub fn moxcms::Rgb<T>::cbrt(&self) -> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::sqrt(&self) -> moxcms::Rgb<T>
impl<T> moxcms::Rgb<T> where T: num_traits::float::Float + 'static
pub fn moxcms::Rgb<T>::round(self) -> moxcms::Rgb<T>
impl<T> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::cast<V>(self) -> moxcms::Rgb<V> where T: num_traits::cast::AsPrimitive<V>, V: core::marker::Copy + 'static
impl<T> moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::new(r: T, g: T, b: T) -> moxcms::Rgb<T>
impl<T: core::clone::Clone> core::clone::Clone for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::clone(&self) -> moxcms::Rgb<T>
impl<T: core::cmp::PartialEq> core::cmp::PartialEq for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::eq(&self, other: &moxcms::Rgb<T>) -> bool
impl<T: core::cmp::PartialOrd> core::cmp::PartialOrd for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::partial_cmp(&self, other: &moxcms::Rgb<T>) -> core::option::Option<core::cmp::Ordering>
impl<T: core::default::Default> core::default::Default for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::default() -> moxcms::Rgb<T>
impl<T: core::fmt::Debug> core::fmt::Debug for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: core::marker::Copy> core::marker::Copy for moxcms::Rgb<T>
impl<T> core::marker::StructuralPartialEq for moxcms::Rgb<T>
impl<T> core::ops::arith::Add for moxcms::Rgb<T> where T: core::ops::arith::Add<Output = T>
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::add(self, rhs: Self) -> Self::Output
impl<T> core::ops::arith::AddAssign for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<T>
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: Self)
impl<T> core::ops::arith::AddAssign<f32> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<f32> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: f32)
impl<T> core::ops::arith::AddAssign<f64> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<f64> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: f64)
impl<T> core::ops::arith::AddAssign<i16> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<i16> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: i16)
impl<T> core::ops::arith::AddAssign<i32> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<i32> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: i32)
impl<T> core::ops::arith::AddAssign<i8> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<i8> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: i8)
impl<T> core::ops::arith::AddAssign<u16> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<u16> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: u16)
impl<T> core::ops::arith::AddAssign<u32> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<u32> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: u32)
impl<T> core::ops::arith::AddAssign<u8> for moxcms::Rgb<T> where T: core::ops::arith::AddAssign<u8> + core::marker::Copy
pub fn moxcms::Rgb<T>::add_assign(&mut self, rhs: u8)
impl<T> core::ops::arith::Div for moxcms::Rgb<T> where T: core::ops::arith::Div<Output = T>
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::div(self, rhs: Self) -> Self::Output
impl<T> core::ops::arith::Div<T> for moxcms::Rgb<T> where T: core::ops::arith::Div<Output = T> + core::clone::Clone + core::marker::Copy
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::div(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::DivAssign for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<T>
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: Self)
impl<T> core::ops::arith::DivAssign<f32> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<f32> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: f32)
impl<T> core::ops::arith::DivAssign<f64> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<f64> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: f64)
impl<T> core::ops::arith::DivAssign<i16> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<i16> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: i16)
impl<T> core::ops::arith::DivAssign<i32> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<i32> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: i32)
impl<T> core::ops::arith::DivAssign<i8> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<i8> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: i8)
impl<T> core::ops::arith::DivAssign<u16> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<u16> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: u16)
impl<T> core::ops::arith::DivAssign<u32> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<u32> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: u32)
impl<T> core::ops::arith::DivAssign<u8> for moxcms::Rgb<T> where T: core::ops::arith::DivAssign<u8> + core::marker::Copy
pub fn moxcms::Rgb<T>::div_assign(&mut self, rhs: u8)
impl<T> core::ops::arith::Mul for moxcms::Rgb<T> where T: core::ops::arith::Mul<Output = T>
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::mul(self, rhs: Self) -> Self::Output
impl<T> core::ops::arith::Mul<T> for moxcms::Rgb<T> where T: core::ops::arith::Mul<Output = T> + core::clone::Clone + core::marker::Copy
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::mul(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::MulAssign for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<T>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: Self)
impl<T> core::ops::arith::MulAssign<f32> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<f32>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: f32)
impl<T> core::ops::arith::MulAssign<f64> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<f64>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: f64)
impl<T> core::ops::arith::MulAssign<i16> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<i16>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: i16)
impl<T> core::ops::arith::MulAssign<i32> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<i32>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: i32)
impl<T> core::ops::arith::MulAssign<i8> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<i8>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: i8)
impl<T> core::ops::arith::MulAssign<u16> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<u16>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: u16)
impl<T> core::ops::arith::MulAssign<u32> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<u32>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: u32)
impl<T> core::ops::arith::MulAssign<u8> for moxcms::Rgb<T> where T: core::ops::arith::MulAssign<u8>
pub fn moxcms::Rgb<T>::mul_assign(&mut self, rhs: u8)
impl<T> core::ops::arith::Neg for moxcms::Rgb<T> where T: core::ops::arith::Neg<Output = T>
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::neg(self) -> Self::Output
impl<T> core::ops::arith::Sub for moxcms::Rgb<T> where T: core::ops::arith::Sub<Output = T>
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::sub(self, rhs: Self) -> Self::Output
impl<T> core::ops::arith::Sub<T> for moxcms::Rgb<T> where T: core::ops::arith::Sub<Output = T> + core::marker::Copy + core::clone::Clone
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::sub(self, rhs: T) -> Self::Output
impl<T> core::ops::index::Index<usize> for moxcms::Rgb<T>
pub type moxcms::Rgb<T>::Output = T
pub fn moxcms::Rgb<T>::index(&self, index: usize) -> &T
impl<T> core::ops::index::IndexMut<usize> for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::index_mut(&mut self, index: usize) -> &mut T
impl<T> num_traits::pow::Pow<T> for moxcms::Rgb<T> where T: num_traits::float::Float
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::pow(self, rhs: T) -> Self::Output
impl<T> num_traits::pow::Pow<moxcms::Rgb<T>> for moxcms::Rgb<T> where T: num_traits::float::Float
pub type moxcms::Rgb<T>::Output = moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::pow(self, rhs: moxcms::Rgb<T>) -> Self::Output
impl<T> core::marker::Freeze for moxcms::Rgb<T> where T: core::marker::Freeze
impl<T> core::marker::Send for moxcms::Rgb<T> where T: core::marker::Send
impl<T> core::marker::Sync for moxcms::Rgb<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for moxcms::Rgb<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for moxcms::Rgb<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for moxcms::Rgb<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for moxcms::Rgb<T> where U: core::convert::From<T>
pub fn moxcms::Rgb<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Rgb<T> where U: core::convert::Into<T>
pub type moxcms::Rgb<T>::Error = core::convert::Infallible
pub fn moxcms::Rgb<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Rgb<T> where U: core::convert::TryFrom<T>
pub type moxcms::Rgb<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Rgb<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Rgb<T> where T: core::clone::Clone
pub type moxcms::Rgb<T>::Owned = T
pub fn moxcms::Rgb<T>::clone_into(&self, target: &mut T)
pub fn moxcms::Rgb<T>::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Rgb<T> where T: 'static + ?core::marker::Sized
pub fn moxcms::Rgb<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Rgb<T> where T: ?core::marker::Sized
pub fn moxcms::Rgb<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Rgb<T> where T: ?core::marker::Sized
pub fn moxcms::Rgb<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Rgb<T> where T: core::clone::Clone
pub unsafe fn moxcms::Rgb<T>::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Rgb<T>
pub fn moxcms::Rgb<T>::from(t: T) -> T
pub struct moxcms::TransformOptions
pub moxcms::TransformOptions::allow_extended_range_rgb_xyz: bool
pub moxcms::TransformOptions::allow_use_cicp_transfer: bool
pub moxcms::TransformOptions::barycentric_weight_scale: moxcms::BarycentricWeightScale
pub moxcms::TransformOptions::interpolation_method: moxcms::InterpolationMethod
pub moxcms::TransformOptions::prefer_fixed_point: bool
pub moxcms::TransformOptions::rendering_intent: moxcms::RenderingIntent
impl core::clone::Clone for moxcms::TransformOptions
pub fn moxcms::TransformOptions::clone(&self) -> moxcms::TransformOptions
impl core::cmp::Eq for moxcms::TransformOptions
impl core::cmp::Ord for moxcms::TransformOptions
pub fn moxcms::TransformOptions::cmp(&self, other: &moxcms::TransformOptions) -> core::cmp::Ordering
impl core::cmp::PartialEq for moxcms::TransformOptions
pub fn moxcms::TransformOptions::eq(&self, other: &moxcms::TransformOptions) -> bool
impl core::cmp::PartialOrd for moxcms::TransformOptions
pub fn moxcms::TransformOptions::partial_cmp(&self, other: &moxcms::TransformOptions) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::TransformOptions
pub fn moxcms::TransformOptions::default() -> Self
impl core::fmt::Debug for moxcms::TransformOptions
pub fn moxcms::TransformOptions::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for moxcms::TransformOptions
pub fn moxcms::TransformOptions::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for moxcms::TransformOptions
impl core::marker::StructuralPartialEq for moxcms::TransformOptions
impl core::marker::Freeze for moxcms::TransformOptions
impl core::marker::Send for moxcms::TransformOptions
impl core::marker::Sync for moxcms::TransformOptions
impl core::marker::Unpin for moxcms::TransformOptions
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::TransformOptions
impl core::panic::unwind_safe::UnwindSafe for moxcms::TransformOptions
impl<T, U> core::convert::Into<U> for moxcms::TransformOptions where U: core::convert::From<T>
pub fn moxcms::TransformOptions::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::TransformOptions where U: core::convert::Into<T>
pub type moxcms::TransformOptions::Error = core::convert::Infallible
pub fn moxcms::TransformOptions::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::TransformOptions where U: core::convert::TryFrom<T>
pub type moxcms::TransformOptions::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::TransformOptions::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::TransformOptions where T: core::clone::Clone
pub type moxcms::TransformOptions::Owned = T
pub fn moxcms::TransformOptions::clone_into(&self, target: &mut T)
pub fn moxcms::TransformOptions::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::TransformOptions where T: 'static + ?core::marker::Sized
pub fn moxcms::TransformOptions::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::TransformOptions where T: ?core::marker::Sized
pub fn moxcms::TransformOptions::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::TransformOptions where T: ?core::marker::Sized
pub fn moxcms::TransformOptions::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::TransformOptions where T: core::clone::Clone
pub unsafe fn moxcms::TransformOptions::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::TransformOptions
pub fn moxcms::TransformOptions::from(t: T) -> T
#[repr(transparent)] pub struct moxcms::Vector3<T>
pub moxcms::Vector3::v: [T; 3]
impl<T: 'static> moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::cast<V: core::marker::Copy + 'static>(&self) -> moxcms::Vector3<V> where T: num_traits::cast::AsPrimitive<V>
impl<T> moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::to_<Z: core::marker::Copy + 'static>(self) -> moxcms::Vector3<Z> where T: num_traits::cast::AsPrimitive<Z>
impl<T: core::clone::Clone> core::clone::Clone for moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::clone(&self) -> moxcms::Vector3<T>
impl<T: core::default::Default> core::default::Default for moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::default() -> moxcms::Vector3<T>
impl<T: core::fmt::Debug> core::fmt::Debug for moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: core::marker::Copy> core::marker::Copy for moxcms::Vector3<T>
impl<T> core::cmp::PartialEq for moxcms::Vector3<T> where T: num_traits::cast::AsPrimitive<f32>
pub fn moxcms::Vector3<T>::eq(&self, other: &Self) -> bool
impl<T> core::convert::From<T> for moxcms::Vector3<T> where T: core::marker::Copy
pub fn moxcms::Vector3<T>::from(value: T) -> Self
impl<T> core::ops::arith::Add for moxcms::Vector3<T> where T: core::ops::arith::Add<Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::add(self, rhs: moxcms::Vector3<T>) -> Self::Output
impl<T> core::ops::arith::Add<T> for moxcms::Vector3<T> where T: core::ops::arith::Add<Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::add(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::Mul for moxcms::Vector3<T> where T: core::ops::arith::Mul<Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::mul(self, rhs: moxcms::Vector3<T>) -> Self::Output
impl<T> core::ops::arith::Mul<T> for moxcms::Vector3<T> where T: core::ops::arith::Mul<Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::mul(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::Sub for moxcms::Vector3<T> where T: core::ops::arith::Sub<Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::sub(self, rhs: moxcms::Vector3<T>) -> Self::Output
impl<T> core::ops::bit::Shr<i32> for moxcms::Vector3<T> where T: core::ops::bit::Shr<i32, Output = T> + core::marker::Copy
pub type moxcms::Vector3<T>::Output = moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::shr(self, rhs: i32) -> Self::Output
impl<T> core::marker::Freeze for moxcms::Vector3<T> where T: core::marker::Freeze
impl<T> core::marker::Send for moxcms::Vector3<T> where T: core::marker::Send
impl<T> core::marker::Sync for moxcms::Vector3<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for moxcms::Vector3<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for moxcms::Vector3<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for moxcms::Vector3<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for moxcms::Vector3<T> where U: core::convert::From<T>
pub fn moxcms::Vector3<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Vector3<T> where U: core::convert::Into<T>
pub type moxcms::Vector3<T>::Error = core::convert::Infallible
pub fn moxcms::Vector3<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Vector3<T> where U: core::convert::TryFrom<T>
pub type moxcms::Vector3<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Vector3<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Vector3<T> where T: core::clone::Clone
pub type moxcms::Vector3<T>::Owned = T
pub fn moxcms::Vector3<T>::clone_into(&self, target: &mut T)
pub fn moxcms::Vector3<T>::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Vector3<T> where T: 'static + ?core::marker::Sized
pub fn moxcms::Vector3<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Vector3<T> where T: ?core::marker::Sized
pub fn moxcms::Vector3<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Vector3<T> where T: ?core::marker::Sized
pub fn moxcms::Vector3<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Vector3<T> where T: core::clone::Clone
pub unsafe fn moxcms::Vector3<T>::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::from(t: T) -> T
impl<T> core::convert::From<never> for moxcms::Vector3<T>
pub fn moxcms::Vector3<T>::from(t: never) -> T
#[repr(transparent)] pub struct moxcms::Vector4<T>
pub moxcms::Vector4::v: [T; 4]
impl<T: core::clone::Clone> core::clone::Clone for moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::clone(&self) -> moxcms::Vector4<T>
impl<T: core::default::Default> core::default::Default for moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::default() -> moxcms::Vector4<T>
impl<T: core::fmt::Debug> core::fmt::Debug for moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T: core::marker::Copy> core::marker::Copy for moxcms::Vector4<T>
impl<T> core::convert::From<T> for moxcms::Vector4<T> where T: core::marker::Copy
pub fn moxcms::Vector4<T>::from(value: T) -> Self
impl<T> core::ops::arith::Add for moxcms::Vector4<T> where T: core::ops::arith::Add<Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::add(self, rhs: moxcms::Vector4<T>) -> Self::Output
impl<T> core::ops::arith::Add<T> for moxcms::Vector4<T> where T: core::ops::arith::Add<Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::add(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::Mul for moxcms::Vector4<T> where T: core::ops::arith::Mul<Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::mul(self, rhs: moxcms::Vector4<T>) -> Self::Output
impl<T> core::ops::arith::Mul<T> for moxcms::Vector4<T> where T: core::ops::arith::Mul<Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::mul(self, rhs: T) -> Self::Output
impl<T> core::ops::arith::Sub for moxcms::Vector4<T> where T: core::ops::arith::Sub<Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::sub(self, rhs: moxcms::Vector4<T>) -> Self::Output
impl<T> core::ops::bit::Shr<i32> for moxcms::Vector4<T> where T: core::ops::bit::Shr<i32, Output = T> + core::marker::Copy
pub type moxcms::Vector4<T>::Output = moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::shr(self, rhs: i32) -> Self::Output
impl<T> core::marker::Freeze for moxcms::Vector4<T> where T: core::marker::Freeze
impl<T> core::marker::Send for moxcms::Vector4<T> where T: core::marker::Send
impl<T> core::marker::Sync for moxcms::Vector4<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for moxcms::Vector4<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for moxcms::Vector4<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for moxcms::Vector4<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for moxcms::Vector4<T> where U: core::convert::From<T>
pub fn moxcms::Vector4<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Vector4<T> where U: core::convert::Into<T>
pub type moxcms::Vector4<T>::Error = core::convert::Infallible
pub fn moxcms::Vector4<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Vector4<T> where U: core::convert::TryFrom<T>
pub type moxcms::Vector4<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Vector4<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Vector4<T> where T: core::clone::Clone
pub type moxcms::Vector4<T>::Owned = T
pub fn moxcms::Vector4<T>::clone_into(&self, target: &mut T)
pub fn moxcms::Vector4<T>::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Vector4<T> where T: 'static + ?core::marker::Sized
pub fn moxcms::Vector4<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Vector4<T> where T: ?core::marker::Sized
pub fn moxcms::Vector4<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Vector4<T> where T: ?core::marker::Sized
pub fn moxcms::Vector4<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Vector4<T> where T: core::clone::Clone
pub unsafe fn moxcms::Vector4<T>::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::from(t: T) -> T
impl<T> core::convert::From<never> for moxcms::Vector4<T>
pub fn moxcms::Vector4<T>::from(t: never) -> T
pub struct moxcms::ViewingConditions
pub moxcms::ViewingConditions::illuminant: moxcms::Xyz
pub moxcms::ViewingConditions::observer: moxcms::StandardObserver
pub moxcms::ViewingConditions::surround: moxcms::Xyz
impl core::clone::Clone for moxcms::ViewingConditions
pub fn moxcms::ViewingConditions::clone(&self) -> moxcms::ViewingConditions
impl core::fmt::Debug for moxcms::ViewingConditions
pub fn moxcms::ViewingConditions::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::ViewingConditions
impl core::marker::Freeze for moxcms::ViewingConditions
impl core::marker::Send for moxcms::ViewingConditions
impl core::marker::Sync for moxcms::ViewingConditions
impl core::marker::Unpin for moxcms::ViewingConditions
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::ViewingConditions
impl core::panic::unwind_safe::UnwindSafe for moxcms::ViewingConditions
impl<T, U> core::convert::Into<U> for moxcms::ViewingConditions where U: core::convert::From<T>
pub fn moxcms::ViewingConditions::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::ViewingConditions where U: core::convert::Into<T>
pub type moxcms::ViewingConditions::Error = core::convert::Infallible
pub fn moxcms::ViewingConditions::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::ViewingConditions where U: core::convert::TryFrom<T>
pub type moxcms::ViewingConditions::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::ViewingConditions::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::ViewingConditions where T: core::clone::Clone
pub type moxcms::ViewingConditions::Owned = T
pub fn moxcms::ViewingConditions::clone_into(&self, target: &mut T)
pub fn moxcms::ViewingConditions::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::ViewingConditions where T: 'static + ?core::marker::Sized
pub fn moxcms::ViewingConditions::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::ViewingConditions where T: ?core::marker::Sized
pub fn moxcms::ViewingConditions::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::ViewingConditions where T: ?core::marker::Sized
pub fn moxcms::ViewingConditions::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::ViewingConditions where T: core::clone::Clone
pub unsafe fn moxcms::ViewingConditions::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::ViewingConditions
pub fn moxcms::ViewingConditions::from(t: T) -> T
pub struct moxcms::XyY
pub moxcms::XyY::x: f64
pub moxcms::XyY::y: f64
pub moxcms::XyY::yb: f64
impl moxcms::XyY
pub const fn moxcms::XyY::new(x: f64, y: f64, yb: f64) -> Self
pub const fn moxcms::XyY::to_xyz(self) -> moxcms::Xyz
pub const fn moxcms::XyY::to_xyzd(self) -> moxcms::Xyzd
impl core::clone::Clone for moxcms::XyY
pub fn moxcms::XyY::clone(&self) -> moxcms::XyY
impl core::default::Default for moxcms::XyY
pub fn moxcms::XyY::default() -> moxcms::XyY
impl core::fmt::Debug for moxcms::XyY
pub fn moxcms::XyY::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::XyY
impl core::marker::Freeze for moxcms::XyY
impl core::marker::Send for moxcms::XyY
impl core::marker::Sync for moxcms::XyY
impl core::marker::Unpin for moxcms::XyY
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::XyY
impl core::panic::unwind_safe::UnwindSafe for moxcms::XyY
impl<T, U> core::convert::Into<U> for moxcms::XyY where U: core::convert::From<T>
pub fn moxcms::XyY::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::XyY where U: core::convert::Into<T>
pub type moxcms::XyY::Error = core::convert::Infallible
pub fn moxcms::XyY::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::XyY where U: core::convert::TryFrom<T>
pub type moxcms::XyY::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::XyY::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::XyY where T: core::clone::Clone
pub type moxcms::XyY::Owned = T
pub fn moxcms::XyY::clone_into(&self, target: &mut T)
pub fn moxcms::XyY::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::XyY where T: 'static + ?core::marker::Sized
pub fn moxcms::XyY::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::XyY where T: ?core::marker::Sized
pub fn moxcms::XyY::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::XyY where T: ?core::marker::Sized
pub fn moxcms::XyY::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::XyY where T: core::clone::Clone
pub unsafe fn moxcms::XyY::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::XyY
pub fn moxcms::XyY::from(t: T) -> T
#[repr(C)] pub struct moxcms::Xyz
pub moxcms::Xyz::x: f32
pub moxcms::Xyz::y: f32
pub moxcms::Xyz::z: f32
impl moxcms::Xyz
pub fn moxcms::Xyz::from_linear_rgb(rgb: moxcms::Rgb<f32>, rgb_to_xyz: moxcms::Matrix3f) -> Self
pub const fn moxcms::Xyz::new(x: f32, y: f32, z: f32) -> Self
pub fn moxcms::Xyz::normalize(self) -> Self
pub fn moxcms::Xyz::to_linear_rgb(self, rgb_to_xyz: moxcms::Matrix3f) -> moxcms::Rgb<f32>
pub const fn moxcms::Xyz::to_vector(self) -> moxcms::Vector3f
pub const fn moxcms::Xyz::to_vector_d(self) -> moxcms::Vector3d
impl moxcms::Xyz
pub fn moxcms::Xyz::to_xyzd(self) -> moxcms::Xyzd
impl core::clone::Clone for moxcms::Xyz
pub fn moxcms::Xyz::clone(&self) -> moxcms::Xyz
impl core::cmp::PartialEq for moxcms::Xyz
pub fn moxcms::Xyz::eq(&self, other: &Self) -> bool
impl core::convert::TryFrom<moxcms::Xyz> for moxcms::Chromaticity
pub type moxcms::Chromaticity::Error = moxcms::CmsError
pub fn moxcms::Chromaticity::try_from(xyz: moxcms::Xyz) -> core::result::Result<Self, Self::Error>
impl core::default::Default for moxcms::Xyz
pub fn moxcms::Xyz::default() -> moxcms::Xyz
impl core::fmt::Debug for moxcms::Xyz
pub fn moxcms::Xyz::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Xyz
impl core::ops::arith::Div for moxcms::Xyz
pub type moxcms::Xyz::Output = moxcms::Xyz
pub fn moxcms::Xyz::div(self, rhs: moxcms::Xyz) -> Self::Output
impl core::ops::arith::Div<f32> for moxcms::Xyz
pub type moxcms::Xyz::Output = moxcms::Xyz
pub fn moxcms::Xyz::div(self, rhs: f32) -> Self::Output
impl core::ops::arith::Mul for moxcms::Xyz
pub type moxcms::Xyz::Output = moxcms::Xyz
pub fn moxcms::Xyz::mul(self, rhs: moxcms::Xyz) -> Self::Output
impl core::ops::arith::Mul<f32> for moxcms::Xyz
pub type moxcms::Xyz::Output = moxcms::Xyz
pub fn moxcms::Xyz::mul(self, rhs: f32) -> Self::Output
impl core::marker::Freeze for moxcms::Xyz
impl core::marker::Send for moxcms::Xyz
impl core::marker::Sync for moxcms::Xyz
impl core::marker::Unpin for moxcms::Xyz
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Xyz
impl core::panic::unwind_safe::UnwindSafe for moxcms::Xyz
impl<T, U> core::convert::Into<U> for moxcms::Xyz where U: core::convert::From<T>
pub fn moxcms::Xyz::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Xyz where U: core::convert::Into<T>
pub type moxcms::Xyz::Error = core::convert::Infallible
pub fn moxcms::Xyz::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Xyz where U: core::convert::TryFrom<T>
pub type moxcms::Xyz::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Xyz::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Xyz where T: core::clone::Clone
pub type moxcms::Xyz::Owned = T
pub fn moxcms::Xyz::clone_into(&self, target: &mut T)
pub fn moxcms::Xyz::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Xyz where T: 'static + ?core::marker::Sized
pub fn moxcms::Xyz::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Xyz where T: ?core::marker::Sized
pub fn moxcms::Xyz::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Xyz where T: ?core::marker::Sized
pub fn moxcms::Xyz::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Xyz where T: core::clone::Clone
pub unsafe fn moxcms::Xyz::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Xyz
pub fn moxcms::Xyz::from(t: T) -> T
#[repr(C)] pub struct moxcms::Xyzd
pub moxcms::Xyzd::x: f64
pub moxcms::Xyzd::y: f64
pub moxcms::Xyzd::z: f64
impl moxcms::Xyzd
pub fn moxcms::Xyzd::from_linear_rgb(rgb: moxcms::Rgb<f64>, rgb_to_xyz: moxcms::Matrix3d) -> Self
pub const fn moxcms::Xyzd::new(x: f64, y: f64, z: f64) -> Self
pub fn moxcms::Xyzd::normalize(self) -> Self
pub fn moxcms::Xyzd::to_linear_rgb(self, rgb_to_xyz: moxcms::Matrix3d) -> moxcms::Rgb<f64>
pub const fn moxcms::Xyzd::to_vector(self) -> moxcms::Vector3f
pub const fn moxcms::Xyzd::to_vector_d(self) -> moxcms::Vector3d
impl moxcms::Xyzd
pub fn moxcms::Xyzd::to_xyz(self) -> moxcms::Xyz
impl core::clone::Clone for moxcms::Xyzd
pub fn moxcms::Xyzd::clone(&self) -> moxcms::Xyzd
impl core::cmp::PartialEq for moxcms::Xyzd
pub fn moxcms::Xyzd::eq(&self, other: &Self) -> bool
impl core::default::Default for moxcms::Xyzd
pub fn moxcms::Xyzd::default() -> moxcms::Xyzd
impl core::fmt::Debug for moxcms::Xyzd
pub fn moxcms::Xyzd::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Xyzd
impl core::ops::arith::Div for moxcms::Xyzd
pub type moxcms::Xyzd::Output = moxcms::Xyzd
pub fn moxcms::Xyzd::div(self, rhs: moxcms::Xyzd) -> Self::Output
impl core::ops::arith::Div<f64> for moxcms::Xyzd
pub type moxcms::Xyzd::Output = moxcms::Xyzd
pub fn moxcms::Xyzd::div(self, rhs: f64) -> Self::Output
impl core::ops::arith::Mul for moxcms::Xyzd
pub type moxcms::Xyzd::Output = moxcms::Xyzd
pub fn moxcms::Xyzd::mul(self, rhs: moxcms::Xyzd) -> Self::Output
impl core::ops::arith::Mul<f64> for moxcms::Xyzd
pub type moxcms::Xyzd::Output = moxcms::Xyzd
pub fn moxcms::Xyzd::mul(self, rhs: f64) -> Self::Output
impl core::marker::Freeze for moxcms::Xyzd
impl core::marker::Send for moxcms::Xyzd
impl core::marker::Sync for moxcms::Xyzd
impl core::marker::Unpin for moxcms::Xyzd
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Xyzd
impl core::panic::unwind_safe::UnwindSafe for moxcms::Xyzd
impl<T, U> core::convert::Into<U> for moxcms::Xyzd where U: core::convert::From<T>
pub fn moxcms::Xyzd::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Xyzd where U: core::convert::Into<T>
pub type moxcms::Xyzd::Error = core::convert::Infallible
pub fn moxcms::Xyzd::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Xyzd where U: core::convert::TryFrom<T>
pub type moxcms::Xyzd::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Xyzd::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Xyzd where T: core::clone::Clone
pub type moxcms::Xyzd::Owned = T
pub fn moxcms::Xyzd::clone_into(&self, target: &mut T)
pub fn moxcms::Xyzd::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Xyzd where T: 'static + ?core::marker::Sized
pub fn moxcms::Xyzd::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Xyzd where T: ?core::marker::Sized
pub fn moxcms::Xyzd::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Xyzd where T: ?core::marker::Sized
pub fn moxcms::Xyzd::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Xyzd where T: core::clone::Clone
pub unsafe fn moxcms::Xyzd::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Xyzd
pub fn moxcms::Xyzd::from(t: T) -> T
#[repr(C)] pub struct moxcms::Ych
pub moxcms::Ych::c: f32
pub moxcms::Ych::h: f32
pub moxcms::Ych::y: f32
impl moxcms::Ych
pub fn moxcms::Ych::from_yrg(yrg: moxcms::Yrg) -> Self
pub const fn moxcms::Ych::new(y: f32, c: f32, h: f32) -> Self
pub fn moxcms::Ych::to_yrg(&self) -> moxcms::Yrg
impl core::clone::Clone for moxcms::Ych
pub fn moxcms::Ych::clone(&self) -> moxcms::Ych
impl core::cmp::PartialEq for moxcms::Ych
pub fn moxcms::Ych::eq(&self, other: &moxcms::Ych) -> bool
impl core::cmp::PartialOrd for moxcms::Ych
pub fn moxcms::Ych::partial_cmp(&self, other: &moxcms::Ych) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::Ych
pub fn moxcms::Ych::default() -> moxcms::Ych
impl core::fmt::Debug for moxcms::Ych
pub fn moxcms::Ych::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Ych
impl core::marker::StructuralPartialEq for moxcms::Ych
impl core::marker::Freeze for moxcms::Ych
impl core::marker::Send for moxcms::Ych
impl core::marker::Sync for moxcms::Ych
impl core::marker::Unpin for moxcms::Ych
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Ych
impl core::panic::unwind_safe::UnwindSafe for moxcms::Ych
impl<T, U> core::convert::Into<U> for moxcms::Ych where U: core::convert::From<T>
pub fn moxcms::Ych::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Ych where U: core::convert::Into<T>
pub type moxcms::Ych::Error = core::convert::Infallible
pub fn moxcms::Ych::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Ych where U: core::convert::TryFrom<T>
pub type moxcms::Ych::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Ych::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Ych where T: core::clone::Clone
pub type moxcms::Ych::Owned = T
pub fn moxcms::Ych::clone_into(&self, target: &mut T)
pub fn moxcms::Ych::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Ych where T: 'static + ?core::marker::Sized
pub fn moxcms::Ych::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Ych where T: ?core::marker::Sized
pub fn moxcms::Ych::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Ych where T: ?core::marker::Sized
pub fn moxcms::Ych::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Ych where T: core::clone::Clone
pub unsafe fn moxcms::Ych::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Ych
pub fn moxcms::Ych::from(t: T) -> T
#[repr(C)] pub struct moxcms::Yrg
pub moxcms::Yrg::g: f32
pub moxcms::Yrg::r: f32
pub moxcms::Yrg::y: f32
impl moxcms::Yrg
pub fn moxcms::Yrg::from_xyz(xyz: moxcms::Xyz) -> Self
pub const fn moxcms::Yrg::new(y: f32, r: f32, g: f32) -> moxcms::Yrg
pub fn moxcms::Yrg::to_xyz(&self) -> moxcms::Xyz
impl core::clone::Clone for moxcms::Yrg
pub fn moxcms::Yrg::clone(&self) -> moxcms::Yrg
impl core::cmp::PartialEq for moxcms::Yrg
pub fn moxcms::Yrg::eq(&self, other: &moxcms::Yrg) -> bool
impl core::cmp::PartialOrd for moxcms::Yrg
pub fn moxcms::Yrg::partial_cmp(&self, other: &moxcms::Yrg) -> core::option::Option<core::cmp::Ordering>
impl core::default::Default for moxcms::Yrg
pub fn moxcms::Yrg::default() -> moxcms::Yrg
impl core::fmt::Debug for moxcms::Yrg
pub fn moxcms::Yrg::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::Copy for moxcms::Yrg
impl core::marker::StructuralPartialEq for moxcms::Yrg
impl core::marker::Freeze for moxcms::Yrg
impl core::marker::Send for moxcms::Yrg
impl core::marker::Sync for moxcms::Yrg
impl core::marker::Unpin for moxcms::Yrg
impl core::panic::unwind_safe::RefUnwindSafe for moxcms::Yrg
impl core::panic::unwind_safe::UnwindSafe for moxcms::Yrg
impl<T, U> core::convert::Into<U> for moxcms::Yrg where U: core::convert::From<T>
pub fn moxcms::Yrg::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for moxcms::Yrg where U: core::convert::Into<T>
pub type moxcms::Yrg::Error = core::convert::Infallible
pub fn moxcms::Yrg::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for moxcms::Yrg where U: core::convert::TryFrom<T>
pub type moxcms::Yrg::Error = <U as core::convert::TryFrom<T>>::Error
pub fn moxcms::Yrg::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for moxcms::Yrg where T: core::clone::Clone
pub type moxcms::Yrg::Owned = T
pub fn moxcms::Yrg::clone_into(&self, target: &mut T)
pub fn moxcms::Yrg::to_owned(&self) -> T
impl<T> core::any::Any for moxcms::Yrg where T: 'static + ?core::marker::Sized
pub fn moxcms::Yrg::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for moxcms::Yrg where T: ?core::marker::Sized
pub fn moxcms::Yrg::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for moxcms::Yrg where T: ?core::marker::Sized
pub fn moxcms::Yrg::borrow_mut(&mut self) -> &mut T
impl<T> core::clone::CloneToUninit for moxcms::Yrg where T: core::clone::Clone
pub unsafe fn moxcms::Yrg::clone_to_uninit(&self, dest: *mut u8)
impl<T> core::convert::From<T> for moxcms::Yrg
pub fn moxcms::Yrg::from(t: T) -> T
pub const moxcms::BT2020_MATRIX: moxcms::Matrix3d
pub const moxcms::DISPLAY_P3_MATRIX: moxcms::Matrix3d
pub const moxcms::HLG_LUT_TABLE: [u16; 4096]
pub const moxcms::PQ_LUT_TABLE: [u16; 4096]
pub const moxcms::SRGB_MATRIX: moxcms::Matrix3d
pub const moxcms::WHITE_POINT_D50: moxcms::XyY
pub const moxcms::WHITE_POINT_D60: moxcms::XyY
pub const moxcms::WHITE_POINT_D65: moxcms::XyY
pub const moxcms::WHITE_POINT_DCI_P3: moxcms::XyY
pub trait moxcms::InPlaceStage
pub fn moxcms::InPlaceStage::transform(&self, dst: &mut [f32]) -> core::result::Result<(), moxcms::CmsError>
pub trait moxcms::Stage
pub fn moxcms::Stage::transform(&self, src: &[f32], dst: &mut [f32]) -> core::result::Result<(), moxcms::CmsError>
pub trait moxcms::TransformExecutor<V: core::marker::Copy + core::default::Default>
pub fn moxcms::TransformExecutor::transform(&self, src: &[V], dst: &mut [V]) -> core::result::Result<(), moxcms::CmsError>
pub const fn moxcms::adapt_to_d50(r: moxcms::Matrix3f, source_white_pt: moxcms::XyY) -> moxcms::Matrix3f
pub const fn moxcms::adapt_to_d50_d(r: moxcms::Matrix3d, source_white_pt: moxcms::XyY) -> moxcms::Matrix3d
pub const fn moxcms::adapt_to_illuminant(r: moxcms::Matrix3f, source_white_pt: moxcms::XyY, illuminant_xyz: moxcms::Xyz) -> moxcms::Matrix3f
pub const fn moxcms::adapt_to_illuminant_d(r: moxcms::Matrix3d, source_white_pt: moxcms::XyY, illuminant_xyz: moxcms::Xyz) -> moxcms::Matrix3d
pub const fn moxcms::adapt_to_illuminant_xyz(r: moxcms::Matrix3f, source_white_pt: moxcms::Xyz, illuminant_xyz: moxcms::Xyz) -> moxcms::Matrix3f
pub const fn moxcms::adapt_to_illuminant_xyz_d(r: moxcms::Matrix3d, source_white_pt: moxcms::Xyz, illuminant_xyz: moxcms::Xyz) -> moxcms::Matrix3d
pub const fn moxcms::adaption_matrix(source_illumination: moxcms::Xyz, target_illumination: moxcms::Xyz) -> moxcms::Matrix3f
pub const fn moxcms::adaption_matrix_d(source_illumination: moxcms::Xyz, target_illumination: moxcms::Xyz) -> moxcms::Matrix3d
pub const fn moxcms::atan2f(y: f32, x: f32) -> f32
pub const fn moxcms::atanf(d: f32) -> f32
pub const fn moxcms::cbrtf(x: f32) -> f32
pub const fn moxcms::cie_y_1931_to_cie_y_2006(x: f32) -> f32
pub const fn moxcms::const_hypotf(x: f32, y: f32) -> f32
pub const fn moxcms::cosf(d: f32) -> f32
pub fn moxcms::curve_from_gamma(gamma: f32) -> moxcms::ToneReprCurve
pub const fn moxcms::exp(d: f64) -> f64
pub const fn moxcms::expf(d: f32) -> f32
pub fn moxcms::f_atan2f(y: f32, x: f32) -> f32
pub fn moxcms::f_atanf(d: f32) -> f32
pub fn moxcms::f_cbrtf(x: f32) -> f32
pub fn moxcms::f_cosf(d: f32) -> f32
pub fn moxcms::f_exp(d: f64) -> f64
pub fn moxcms::f_exp2(d: f64) -> f64
pub fn moxcms::f_exp2f(d: f32) -> f32
pub fn moxcms::f_expf(d: f32) -> f32
pub fn moxcms::f_log(d: f64) -> f64
pub fn moxcms::f_log10(d: f64) -> f64
pub fn moxcms::f_log2(d: f64) -> f64
pub fn moxcms::f_log2f(d: f32) -> f32
pub fn moxcms::f_logf(d: f32) -> f32
pub fn moxcms::f_pow(d: f64, n: f64) -> f64
pub fn moxcms::f_powf(d: f32, n: f32) -> f32
pub fn moxcms::f_sinf(d: f32) -> f32
pub fn moxcms::filmlike_clip(rgb: moxcms::Rgb<f32>) -> moxcms::Rgb<f32>
pub const fn moxcms::floor(x: f64) -> f64
pub const fn moxcms::floorf(x: f32) -> f32
pub fn moxcms::hypotf(x: f32, y: f32) -> f32
pub const fn moxcms::log(d: f64) -> f64
pub fn moxcms::log10f(d: f32) -> f32
pub const fn moxcms::logf(d: f32) -> f32
pub const fn moxcms::pow(d: f64, n: f64) -> f64
pub const fn moxcms::powf(d: f32, n: f32) -> f32
pub const fn moxcms::rounding_div_ceil(value: i32, div: i32) -> i32
pub const fn moxcms::sinf(d: f32) -> f32
pub const fn moxcms::sqrtf(d: f32) -> f32
pub type moxcms::Transform16BitExecutor = (dyn moxcms::TransformExecutor<u16> + core::marker::Send + core::marker::Sync)
pub type moxcms::Transform8BitExecutor = (dyn moxcms::TransformExecutor<u8> + core::marker::Send + core::marker::Sync)
pub type moxcms::TransformF32BitExecutor = (dyn moxcms::TransformExecutor<f32> + core::marker::Send + core::marker::Sync)
pub type moxcms::TransformF64BitExecutor = (dyn moxcms::TransformExecutor<f64> + core::marker::Send + core::marker::Sync)
pub type moxcms::Vector3d = moxcms::Vector3<f64>
pub type moxcms::Vector3f = moxcms::Vector3<f32>
pub type moxcms::Vector3i = moxcms::Vector3<i32>
pub type moxcms::Vector3u = moxcms::Vector3<u32>
pub type moxcms::Vector4d = moxcms::Vector4<f64>
pub type moxcms::Vector4f = moxcms::Vector4<f32>
pub type moxcms::Vector4i = moxcms::Vector4<i32>
